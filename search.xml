<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>早起的重要性</title>
      <link href="/posts/ce5d630c/"/>
      <url>/posts/ce5d630c/</url>
      
        <content type="html"><![CDATA[<p>早睡早起占人体健康的百分之七十，心态、饮食、及时调理各占百分之十，我们就可以知道早睡早起的重要性。<br>我们白天是放电，晚上睡觉是充电。晚上只冲了 50% 的电，白天还要释放 100%，那 50% 哪来的？就是从五脏借。</p><p>五脏在古书中为“五藏”，是“藏”的意思，藏的就是人体的精华，如果总是借，一般人借15年身体就垮了。<br>年轻的时候什么感觉都没有，一过四五十岁了，病就全来了，其实这是一段有很长时间从量变到质变的转化时间的。</p><span id="more"></span><h1 id="什么时候起床才是早起？"><a href="#什么时候起床才是早起？" class="headerlink" title="什么时候起床才是早起？"></a>什么时候起床才是早起？</h1><p>答案是：<strong>5点：惊蛰起床</strong></p><p>一年有 24 个节气，而一天就是一年的缩影，也是有 24 节气的：</p><ul><li><p>3  点立春，4  点雨水，5 点惊蛰，6 点春分，7 点清明，8 点谷雨；</p></li><li><p>9  点立夏，10 点小满，11 点芒种，12 点夏至，13 点小暑，14 点大暑；</p></li><li><p>15 点立秋，16 点处暑，17 点白露，18 点秋分，19 点寒露，20 点霜降；</p></li><li><p>21 点立冬，22 点小雪，23 点大雪，24 点冬至，1 点小寒，2 点大寒。</p></li></ul><blockquote><p>惊蛰，“众蛰各潜骇，草木纵横舒”，蛰为冬眠的动物，惊蛰即意味着蛰伏的动物在这个节气惊醒，包括狗熊、蛇、青蛙，虫子等等。</p></blockquote><p>不是有人挨家挨户的去叫它们起床，动物能感觉到天地之间阳气的变化，所以它们都醒了。</p><p>人也是高级动物，但是人们过多的自我削弱了对客观自然的感知度，敏感的人早 5 点左右会醒来，不醒也睡的不那么沉了，不敏感的人，还是呼呼大睡。</p><p>人体内蛰伏的是什么呢？</p><p>就是冬眠了一晚上的阳气，也就是说在 5 点惊蛰时分，人体的阳气要生起来，就像完成春天的播种一样。</p><p>如何生起来？只有一个途径，就是“春主醒、主动”，到 5 点的时候，你必须醒了，而且醒了以后必须起来活动，一动人的阳气就生起来了。</p><p>可能前一分钟还躺在床上感觉特别困，在为起或不起做思想斗争，当一分钟以后，真正穿衣服起来一活动的时候，就感觉突然不困了，为什么，阳气生起来了。活动半个小时，一会困了可以睡回笼觉。</p><p>不早起的人是没劲的，不是起的越晚越精神，反而是越累，不信你一觉睡到中午 12 点试试。</p><p>不早起，阳气没有生起来，人就乏力，但乏力的同时人还爱发脾气，因为阳气憋死为火气，所以人就脾气大，体内的邪火太大了。</p><p>浊酸腐蚀肾，全国肾病的人大概超过 1 亿，根源就是起晚了，肝气没有生发出去，憋在了体内，肝主酸，这种酸性的物质，在腐蚀着肾，架不住天天腐蚀啊，这是很可怕的，所以就是要靠早起早睡。</p><h1 id="坚持早起的好处"><a href="#坚持早起的好处" class="headerlink" title="坚持早起的好处"></a>坚持早起的好处</h1><p>世界权威学术机构的多项健康研究再次证明早起的好处，专家们根据研究结果总结了早起的 7 个好处：</p><h2 id="精力旺盛，不宜犯困"><a href="#精力旺盛，不宜犯困" class="headerlink" title="精力旺盛，不宜犯困"></a>精力旺盛，不宜犯困</h2><p>研究发现，早起者通常起床更快，而且头脑更灵活，能够快速投入注意力要求较高的工作和学习中，也不容易疲劳，精力更旺盛，工作效率更高。</p><h2 id="学习成绩更突出"><a href="#学习成绩更突出" class="headerlink" title="学习成绩更突出"></a>学习成绩更突出</h2><p>美国德克萨斯大学一项研究发现，早起大学生的成绩比“夜猫子型”大学生整整高出一个百分点。研究负责人说，早起的学生生活更规律，准时上课，学习更主动，并且没有熬夜带来的健康问题。</p><h2 id="处理事务更仔细负责"><a href="#处理事务更仔细负责" class="headerlink" title="处理事务更仔细负责"></a>处理事务更仔细负责</h2><p>一些研究发现，早起者头脑更清醒，遇事提前计划，行动更加果敢，他们做事情效率更高、组织性更强、目标更明确、更关注细节。</p><h2 id="白天效率更高"><a href="#白天效率更高" class="headerlink" title="白天效率更高"></a>白天效率更高</h2><p>当“夜猫子”们还在床上挣扎的时候，早起者们可能已经完成晨跑、搞定早餐、开始处理一些必要的事务。安排当天重大的活动，可以开始提早制订计划并及时落实实施。</p><h2 id="幸福感更强"><a href="#幸福感更强" class="headerlink" title="幸福感更强"></a>幸福感更强</h2><p>加拿大多伦多大学的研究人员发现，任何年龄段的人，早起的情绪更加积极向上，自我感觉更好，健康意识也更加强烈。这可能和早起者能在阳光中开始一天的生活、学习、工作心情更好有关。</p><h2 id="抑郁风险小"><a href="#抑郁风险小" class="headerlink" title="抑郁风险小"></a>抑郁风险小</h2><p>研究发现，早起的人做事更有条理，提前准备，很少手忙脚乱，因而性格更加开朗。而爱熬夜的人则更容易患抑郁症，缺少睡眠也是抑郁症的一大诱因。</p><h2 id="为人更和善"><a href="#为人更和善" class="headerlink" title="为人更和善"></a>为人更和善</h2><p>悉尼大学的一项心理学研究发现，早起者为人通常更友善，更少出现“黑暗性格”。</p><p>南怀瑾说：能控制早晨的人，方可控制人生。一个人如果连早起都做不到，你还指望他这一天能做些什么呢？古人云：一日之计在于晨，一年之计在于春。早上都抓不住，怎么能抓住当天。</p><p>早上起来，人体从代谢率最低的睡眠状态中醒来，如能适当运动，有利于提升代谢率，改善血液循环。早上运动，就意味着要早起，而早起的前提是早睡。早睡早起，生活规律，本来就有利于健康。</p><h1 id="早起其实不难"><a href="#早起其实不难" class="headerlink" title="早起其实不难"></a>早起其实不难</h1><p>这个很多人一听觉得不可能，其实很简单，你可以试验一下，你 5 点起床，只是在起床的那几分钟有心理矛盾，起还是不起？起吧，实在太困了！不起，对健康又不好！矛盾！</p><p>但当你真起来了，稍微一活动，或走，或跳，或舒展身体后，你就会感觉不像 1 分钟前躺在床上那么困了，而且感觉很轻松，很舒服。</p><p>我们一再强调早起升肝气，很多人不理解，你亲自早起一次就理解了。早 5 点你还在床上躺着睡觉，或即便醒了不起也是懒的，困的。</p><p>这就是肝气没升起来的表现，或者说阳气没升起来的表现；你 5 点起床稍微活动，人马上就不困了，为什么呢，你体内的阳气随着你的活动升起来了。</p><p>一定要在 5 点，最晚不要超过 6 点前起床，起来后活动活动，看书写字都是头脑清醒的。</p><p>而且 5 点起，少阳得以升发，少阳就是初生的太阳。</p><p>人在 5 点前一天不起，就是一天体内没有太阳，一年不起，就是一年体内没有太阳。人体内没有太阳，就是缺少阳气，生病或早亡也就不足为奇。</p><p>那么为什么 5 点还特困呢？因为你不起。5 点为惊蛰，惊蛰意味着冬眠的动物开始活动，同样在人体，就是阳气开始涌动。</p><p>早起，阳气就能升发出来，人就不困了；因为 5 点不起，人躺着不动，肝气升不起来，所以困。</p><p>那么实在特困怎么办呢，你可以5点起床，活动 10~30 分钟，然后再躺下睡回笼觉，这时阳气已经升起，再睡不会压着阳气。</p><p>这样你再起床后是轻松愉悦的，工作学习精力十足，否则你白天是疲倦的，除了打哈欠就是打瞌睡，干什么都精力不够。</p><h1 id="睡不着？解决方法也是早起！"><a href="#睡不着？解决方法也是早起！" class="headerlink" title="睡不着？解决方法也是早起！"></a>睡不着？解决方法也是早起！</h1><p>当然，也有很多人想早睡，就是睡不着，其中一个解决方法就是早起，早睡不由你决定，但早起可以自己做主。</p><p>当你早起的时候，中午休息半个小时，下午很精神，晚上会早早就困了，当你晚上不困，早上不起，这一直处于一个恶性循环的怪圈，怎么打破这个怪圈呢，就是早起。</p><p>睡眠不是时间问题，它是一个时间段的问题，晚上 9 点到凌晨 3 点为天地在给人补充能量的一个时间段，若是睡觉，就赶上了，晚睡了，就补充了一点；若是没睡觉，那就没赶上。</p><p>没赶上怎么办呢？没赶上就没赶上，没有别的办法，不睡觉是自己的事情，而自然规律不会因哪一个人而改变。</p><h1 id="能控制早晨的人，方可控制人生。"><a href="#能控制早晨的人，方可控制人生。" class="headerlink" title="能控制早晨的人，方可控制人生。"></a>能控制早晨的人，方可控制人生。</h1><p>早起就是救命！早起后，阳气生起来了，不觉得困了，心情变好了，身体也开始变得好起来。</p><p>长期坚持早起的人，会发生 7 种神奇的变化！一分钟就能解决早起问题，获得无数种好处，一定要发给身边朋友，告诉他们从明天开始，早起！</p>]]></content>
      
      
      <categories>
          
          <category> 健康 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 养生 </tag>
            
            <tag> 健康 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows-Terminal-美化教程</title>
      <link href="/posts/a1abbbfe/"/>
      <url>/posts/a1abbbfe/</url>
      
        <content type="html"><![CDATA[<p>平时办公还是以Windows多，黑苹果基本用不上了，除了折腾之外也没啥苹果生态来用。现在Windows Terminal目前也越来越好，使用过程中也遇到过很多问题。现在就写一篇美化教程，让工具用的更顺手。</p><span id="more"></span><h1 id="1-下载安装Windows-Terminal"><a href="#1-下载安装Windows-Terminal" class="headerlink" title="1 下载安装Windows Terminal"></a>1 下载安装Windows Terminal</h1><p>直接从Microsoft Store官方商店里下载Windows Terminal即可。</p><p><img src="https://tuchuang-1258561688.cos.ap-chengdu.myqcloud.com/Windows%20Terminal/Windows%20Terminal.jpg" alt="Windows Terminal"></p><h2 id="1-1-下载安装-powershell-7"><a href="#1-1-下载安装-powershell-7" class="headerlink" title="1.1 下载安装 powershell 7"></a>1.1 下载安装 powershell 7</h2><p>安装最新版的Powershell Core，从GitHub里面下载即可，最好安装msi版本的安装包。</p><blockquote><p>注意：这里安装时勾选所有的选项，有部分属于配置环境变量，不勾选的话，配置不会生效。</p></blockquote><h2 id="1-2-安装-Powershell-插件"><a href="#1-2-安装-Powershell-插件" class="headerlink" title="1.2 安装 Powershell 插件"></a>1.2 安装 Powershell 插件</h2><p>以管理员身份打开Windows Terminal，直接运行内部命令即可，运行时会让你授权，全部按A回车。</p><blockquote><p>注意：此命令里的链接需要GitHub，需要自行解决网络问题。</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 安装 PSReadline 包，该插件可以让命令行很好用，类似 zsh</span></span><br><span class="line">Install-Module -Name PSReadLine  -Scope CurrentUser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 安装 posh-git 包，让你的 git 更好用</span></span><br><span class="line">Install-Module posh-git  -Scope CurrentUser</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 安装 oh-my-posh 包，让你的命令行更酷炫、优雅</span></span><br><span class="line">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure><h1 id="2-编辑配置文件"><a href="#2-编辑配置文件" class="headerlink" title="2 编辑配置文件"></a>2 编辑配置文件</h1><h2 id="2-1-启动编辑power-shell配置文件的引擎）"><a href="#2-1-启动编辑power-shell配置文件的引擎）" class="headerlink" title="2.1 启动编辑power shell配置文件的引擎）"></a>2.1 启动编辑power shell配置文件的引擎）</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!(Test-Path -Path $PROFILE )) &#123; New-Item -<span class="type">Type</span> File -Path $PROFILE -Force &#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-编辑文件"><a href="#2-2-编辑文件" class="headerlink" title="2.2 编辑文件"></a>2.2 编辑文件</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notepad $PROFILE</span><br></pre></td></tr></table></figure><h2 id="2-3-添加配置"><a href="#2-3-添加配置" class="headerlink" title="2.3 添加配置"></a>2.3 添加配置</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Import-Module PSReadline <span class="comment">#导入posh-git</span></span><br><span class="line">Import-Module posh-git <span class="comment">#导入oh-my-posh</span></span><br><span class="line">Import-Module oh-my-posh <span class="comment">#导入oh-my-posh</span></span><br><span class="line"><span class="type">Set</span>-PoshPrompt -Theme agnoster <span class="comment">#设置主题</span></span><br></pre></td></tr></table></figure><p>配置完后，每次打开Windows Terminal中的Power shell都会执行脚本文件中的四条命令。</p><blockquote><p>如果不是很喜欢这个主题，可以使用以下命令来查看所有主题以及主题的名称.omp</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-PoshThemes</span><br></pre></td></tr></table></figure><h1 id="3-安装Nerd-Fonts字体并应用"><a href="#3-安装Nerd-Fonts字体并应用" class="headerlink" title="3 安装Nerd Fonts字体并应用"></a>3 安装Nerd Fonts字体并应用</h1><h2 id="3-1-下载Nerd字体"><a href="#3-1-下载Nerd字体" class="headerlink" title="3.1 下载Nerd字体"></a>3.1 下载Nerd字体</h2><p>可以进入 <a href="https://www.nerdfonts.com/">Nerdfonts 官网</a>，下载喜欢的字体，但必须为Nerd。<br>下载完成后解压缩后，全选并安装所有字体即可。</p><h2 id="3-2-应用字体"><a href="#3-2-应用字体" class="headerlink" title="3.2 应用字体"></a>3.2 应用字体</h2><p>直接在设置里选择相应的字体即可。<br>完成之后重启Windows Terminal即可发现样式改变了，若未改变，请重启Windows Terminal。</p><p>最终效果如下：<br><img src="https://tuchuang-1258561688.cos.ap-chengdu.myqcloud.com/Windows%20Terminal/%E7%BE%8E%E5%8C%96%E5%90%8E.jpg" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《5、自建服务器上部署》</title>
      <link href="/posts/667993d5/"/>
      <url>/posts/667993d5/</url>
      
        <content type="html"><![CDATA[<p>以往都是在直接把网站部署在Github Coding或者是Coding Pages上，这次教程教大家如何把网站部署到自建服务器上（VPS），以进行<code>Hexo d -g</code>。</p><span id="more"></span><h1 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h1><ul><li>第一步：本地安装node.js以及Hexo初始化</li><li>第二步：服务器环境搭建，包括安装 Git 、Nginx配置 、创建 git 用户</li><li>第三步：使用Git自动化部署发布博客</li></ul><h1 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>从<a href="https://nodejs.org/en/">node.js官网</a><code>https://nodejs.org/</code>找到最新的稳定版下载即可。</p><h2 id="初始化Hexo博客"><a href="#初始化Hexo博客" class="headerlink" title="初始化Hexo博客"></a>初始化Hexo博客</h2><h2 id="创建-你的Hexo-目录"><a href="#创建-你的Hexo-目录" class="headerlink" title="创建 你的Hexo 目录"></a>创建 你的Hexo 目录</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir your hexo dir name  <span class="comment">//创建一个自定义的hexo目录，比如我就在用户根目录创建了一个myhexo文件夹（macOS)</span></span><br><span class="line">cd your hexo dir name  <span class="comment">//进入到刚刚创建的目录</span></span><br></pre></td></tr></table></figure><ul><li>安装 <code>hexo-cli</code>，安装<code>hexo-cli</code> 需要 root 权限，使用 <code>sudo</code> 运行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="初始化该文件夹"><a href="#初始化该文件夹" class="headerlink" title="初始化该文件夹"></a>初始化该文件夹</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="安装hexo的扩展插件"><a href="#安装hexo的扩展插件" class="headerlink" title="安装hexo的扩展插件"></a>安装hexo的扩展插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>等执行成功以后安装两个插件， <code>hexo-deployer-git</code> 和 <code>hexo-server</code> ,这俩插件的作用分别是使用Git自动部署，和本地简单的服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hero-server --save</span><br><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h2 id="以及一些其他插件（-非必选）"><a href="#以及一些其他插件（-非必选）" class="headerlink" title="以及一些其他插件（*非必选）"></a>以及一些其他插件（*非必选）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="生成自己的第一篇文章"><a href="#生成自己的第一篇文章" class="headerlink" title="生成自己的第一篇文章"></a>生成自己的第一篇文章</h2><p>使用 <code>hexo new &lt;文章名称&gt;</code> 来新建文章，该命令会成成一个<code>*.md</code>文件放置在 <code>sources/_posts</code>文件夹。（*在hexo目录下执行命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;hello Hexo&quot;</span><br></pre></td></tr></table></figure><p>执行该命令后在hexo目录下的 <code>sources/_posts</code>文件夹里生成了刚刚创建的hello<br>Hexo.md的markdown文件，然后就可以通过本地或者在线的markdown编辑器就可以创作自己的博客了~</p><p>编辑完毕以后， 使用<code>hexo g</code>将 <code>*.md</code>文件渲染成静态文件，然后启动<code>hexo-server</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>打开 <code>http://localhost:4000</code> 如果看到 hexo 的初始页面证明安装成功。</p><h2 id="生成ssh公钥密钥"><a href="#生成ssh公钥密钥" class="headerlink" title="生成ssh公钥密钥"></a>生成ssh公钥密钥</h2><p><code>$ cd ~/.ssh $ ssh-keygen</code><br>它先要求你确认保存公钥的位置<code>.ssh/id_rsa</code>，然后它会让你重复一个密码两次，如果不想在使用公钥的时候输入密码，可以留空；具体生产方法可以参考这里</p><p>这个公钥将会复制到服务器的证书中，添加公钥之后可以防止每次 push 都输入密码。</p><p>至此，本地环境的搭建已经基本结束。</p><p>到这里hexo的本地搭建已经基本结束了，快来新建一个文章并在本地启动吧~<br>具体详细的步骤可以参考<a href="https://vector.today/posts/6255f60b/">这里</a></p><h1 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h1><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p>因为我们是拿nginx做 Web 服务器，所以我们需要安装部署好nginx，如果没有安装，推荐使用宝塔服务端的LNMP一键安装包。</p><p>我们可以专门为hexo创建一个部署目录，比如我创建了<code>/home/www/hexo</code>文件夹，并把nginx的配置文件<code>nginx.conf</code>中的部署目录改为<code>/home/www/hexo</code>，配置文件一般在<code>/usr/local/nginx/conf</code>里；同样可以使用默认目录，nginx的默认目录为<code>/var/www/html</code>，如果使用LNMP一键安装包，则默认的部署目录为<code>/home/wwwroot/default</code></p><h2 id="安装node-js-1"><a href="#安装node-js-1" class="headerlink" title="安装node.js"></a>安装node.js</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p>如果遇到问题可以参考Node.js部署到阿里云服务器里边有更详细的关于node.js的步骤</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure><p>创建一个git用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser git</span><br></pre></td></tr></table></figure><p>虽说现在的仓库只有我们自己在使用，新建一个 git 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 git 用户来专门运行 git 服务</p><h2 id="添加证书登录"><a href="#添加证书登录" class="headerlink" title="添加证书登录"></a>添加证书登录</h2><p>把刚在在本地创建或者已经拥有的公钥，也就是 <code>~/.ssh/id_rsa.pub</code> 文件里的内容添加到服务器的 <code>/home/git/.ssh/authorized_keys</code> 文件中，如上所说，添加公钥之后可以防止每次 push 都输入密码。（*可以直接执行<code>cat ~/.ssh/id_rsa.pub | pbcopy</code> ）</p><h2 id="初始化-Git-仓库"><a href="#初始化-Git-仓库" class="headerlink" title="初始化 Git 仓库"></a>初始化 Git 仓库</h2><p>可以将git仓库放到自定义位置，我是将其放在 &#x2F;var&#x2F;repo&#x2F;blog.git 目录下的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/repo</span><br><span class="line">cd /var/repo</span><br><span class="line">sudo git init --bare blog.git</span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>--bare</code> 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p></blockquote><h2 id="配置-git-hooks"><a href="#配置-git-hooks" class="headerlink" title="配置 git hooks"></a>配置 git hooks</h2><p>我们这里要使用的是 <code>post-receive</code> 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行，关于 hooks<br>的详情内容可以参考这里。</p><p>在 blog.git&#x2F;hooks 目录下新建一个 <code>post-receive</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /var/repo/blog.git/hooks</span><br></pre></td></tr></table></figure><p>编辑这个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>在 <code>post-receive</code> 文件中写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">git --work-tree=/home/www/hexo --git-dir=/var/repo/blog.git checkout -f</span><br></pre></td></tr></table></figure><div class="note "><p>注意：<code>/home/www/hexo</code> 要换成你自己的部署目录，正如上文所说，我是的配置目录是<code>/home/www/hexo</code>。<br><code>/var/repo/blog.git</code>是git仓库的位置。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。</p></div><ul><li>设置这个文件的可执行权限</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br></pre></td></tr></table></figure><p>改变 blog.git 目录的拥有者为 git 用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R git:git blog.git</span><br></pre></td></tr></table></figure><h2 id="禁用-git-用户的-shell-登录权限"><a href="#禁用-git-用户的-shell-登录权限" class="headerlink" title="禁用 git 用户的 shell 登录权限"></a>禁用 git 用户的 shell 登录权限</h2><p>出于安全考虑，我们要让 git 用户不能通过 shell 登录。可以编辑 <code>/etc/passwd</code> 来实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1001:1001:,,,:/home/git:/bin/bash</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>这样 git 用户可以通过 ssh 正常使用 git，但是无法登录 shell。</p><p>至此，服务器环境的搭建已经基本结束。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用宝塔部署Hexo博客到自购服务器</title>
      <link href="/posts/302749/"/>
      <url>/posts/302749/</url>
      
        <content type="html"><![CDATA[<p>之前购入了很便宜的阿里云主机玩玩，1核2G的配置运行博客和FTP存储都很方便，可以做的事情也更多。此教程记录如何用自购服务器运行网站。</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF.jpg"></p><span id="more"></span><h1 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h1><h2 id="面板特色功能"><a href="#面板特色功能" class="headerlink" title="面板特色功能"></a>面板特色功能</h2><ul><li>一键配置服务器环境（LAMP&#x2F;LNMP）</li><li>一键安全重启</li><li>一键创建管理网站、ftp、数据库</li><li>一键配置（定期备份、数据导入、伪静态、301、SSL、子目录、反向代理、切换PHP版本）</li><li>一键安装常用PHP扩展(fileinfo、intl、opcache、imap、memcache、apc、redis、ioncube、imagick)</li><li>数据库一键导入导出</li><li>系统监控（CPU、内存、磁盘IO、网络IO）</li><li>防火墙端口放行</li><li>SSH开启与关闭及SSH端口更改</li><li>禁PING开启或关闭</li><li>方便高效的文件管理器（上传、下载、压缩、解压、查看、编辑等等）</li><li>计划任务（定期备份、日志切割、shell脚本）</li><li>软件管理（一键安装、卸载、版本切换）</li></ul><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><ul><li>内存：512M以上，推荐768M以上（纯面板约占系统60M内存）</li><li>硬盘：100M以上可用硬盘空间（纯面板约占20M磁盘空间）</li><li>系统：Ubuntu16.04+、Debian9.0+，确保是干净的操作系统，没有安装过其它环境带的Apache&#x2F;Nginx&#x2F;php&#x2F;MySQL（已有环境不可安装）</li></ul><h2 id="端口开放"><a href="#端口开放" class="headerlink" title="端口开放"></a>端口开放</h2><p>如果不开放相关端口可能造成无法访问宝塔面板，默认是<code>8888</code>的端口，可进去自定义修改。</p><p>腾讯云：<a href="https://www.bt.cn/bbs/thread-1229-1-1.html">https://www.bt.cn/bbs/thread-1229-1-1.html</a><br>阿里云：<a href="https://www.bt.cn/bbs/thread-2897-1-1.html">https://www.bt.cn/bbs/thread-2897-1-1.html</a><br>华为云：<a href="https://www.bt.cn/bbs/thread-3923-1-1.html">https://www.bt.cn/bbs/thread-3923-1-1.html</a></p><h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><p><strong>Ubuntu</strong> &#x2F; <strong>Deepin</strong>安装命令：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.<span class="property">sh</span> <span class="attr">http</span>:<span class="comment">//download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span></span><br></pre></td></tr></table></figure><p><strong>Debian</strong>安装命令：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.<span class="property">sh</span> <span class="attr">http</span>:<span class="comment">//download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span></span><br></pre></td></tr></table></figure><h1 id="设置SSH登录"><a href="#设置SSH登录" class="headerlink" title="设置SSH登录"></a>设置SSH登录</h1><p>完成如下的设置，你可以直接使用你的命令行工具通过SSH来登录你的服务器（建议在代理下使用SSH），而且不需要每次都输入账号密码，如果没有相关需求的同学可以直接跳过这部分。</p><h2 id="生成本地公钥"><a href="#生成本地公钥" class="headerlink" title="生成本地公钥"></a>生成本地公钥</h2><p>首先，我们现在本地生成自己的公钥</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa <span class="string">&#x27;你的邮箱地址&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="上传你的公钥到服务器"><a href="#上传你的公钥到服务器" class="headerlink" title="上传你的公钥到服务器"></a>上传你的公钥到服务器</h2><p>将你的公钥<code>/.ssh/id_rsa.pub</code>复制到服务器上对应用户的<code>/.ssh/authorized_keys</code>即可。</p><h1 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h1><p>在home目录下创建两个文件夹（Git和Hexo）。</p><ul><li>Git用来配置本服务器端的Git命令</li><li>Hexo为静态博客</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ..   <span class="comment">//这里是因为默认执行目录是root，需要返回根目录</span></span><br><span class="line">cd home</span><br><span class="line">cd git</span><br><span class="line">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure><p>接着，转到宝塔面板，进入<code>/home/git/hexoBlog.git/hooks</code>,然后新建一个文件：<code>post-receive</code>，不要后缀名。然后编辑它，加入如下两条代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">git --work-tree=/home/hexo --git-dir=/home/git/hexoBlog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存即可，接着转到已经登录的实例控制台，即xshell或者腾讯云控制台执行如下代码：</p><figure class="highlight js"><figcaption><span>赋予权限</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/git/hexoBlog.<span class="property">git</span>/hooks/post-receive</span><br></pre></td></tr></table></figure><h1 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h1><p>在左侧网站标签页下，添加你的站点信息。</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/%E5%AE%9D%E5%A1%94%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE.jpg" alt="网页设置"></p><p>宝塔面板默认的nginx配置文件在根目录<code>-&gt;www-&gt;serve-&gt;nginx-&gt;conf</code>下，找到<code>nginx.conf</code>，编辑它。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen <span class="number">80</span>;  <span class="comment"># 博客服务器的访问端口</span></span><br><span class="line">    server_name baidu.com;  <span class="comment"># 填写自定义域名或者IP</span></span><br><span class="line">    index index.php index.html index.htm <span class="keyword">default</span>.php <span class="keyword">default</span>.htm <span class="keyword">default</span>.html;</span><br><span class="line">    root /www/wwwroot/hexo;  <span class="comment"># 填写服务器的目录</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="本地服务器配置"><a href="#本地服务器配置" class="headerlink" title="本地服务器配置"></a>本地服务器配置</h1><p>找到本地Hexo站点配置文件_config.yml，进行如下更改：</p><figure class="highlight yml"><figcaption><span>config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">     <span class="attr">git:</span> <span class="string">root@你的云服务器ip:/home/git/hexoBlog.git</span></span><br><span class="line">   <span class="comment">#如果你更改了ssh端口的话，需要改成:</span></span><br><span class="line">     <span class="attr">git:</span> <span class="string">ssh://root@ip:端口号/home/git/hexoBlog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux环境变量配置全攻略</title>
      <link href="/posts/e2d62e88/"/>
      <url>/posts/e2d62e88/</url>
      
        <content type="html"><![CDATA[<p>在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。</p><span id="more"></span><h1 id="Linux环境变量配置"><a href="#Linux环境变量配置" class="headerlink" title="Linux环境变量配置"></a>Linux环境变量配置</h1><p>下面所有例子的环境说明如下：</p><p>系统：Ubuntu 19.10<br>用户名：vector</p><h2 id="Linux读取环境变量"><a href="#Linux读取环境变量" class="headerlink" title="Linux读取环境变量"></a>Linux读取环境变量</h2><p>读取环境变量的方法：</p><p><code>export</code>命令显示当前系统定义的所有环境变量<br><code>echo $PATH</code>命令输出当前的<code>PATH</code>环境变量的值。</p><p>其中<code>PATH</code>变量定义了运行命令的查找路径，以冒号<code>:</code>分割不同的路径，使用<code>export</code>定义的时候可加双引号也可不加。</p><h1 id="Linux环境变量配置方式"><a href="#Linux环境变量配置方式" class="headerlink" title="Linux环境变量配置方式"></a>Linux环境变量配置方式</h1><h2 id="方法一：export-PATH"><a href="#方法一：export-PATH" class="headerlink" title="方法一：export PATH"></a>方法一：<code>export PATH</code></h2><p>使用<code>export</code>命令直接修改<code>PATH</code>的值。</p><div class="note info"><ul><li>生效时间：立即生效</li><li>生效期限：当前终端有效，窗口关闭后无效</li><li>生效范围：仅对当前用户有效</li><li>配置的环境变量中不要忘了加上原来的配置，即<code>$PATH</code>部分，避免覆盖原来配置</li></ul></div><h2 id="方法二：vim-bashrc"><a href="#方法二：vim-bashrc" class="headerlink" title="方法二：vim ~/.bashrc"></a>方法二：<code>vim ~/.bashrc</code></h2><p>通过修改用户目录下的<code>~/.bashrc</code>文件进行配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.<span class="property">bashrc</span></span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="attr">$PATH</span>:<span class="regexp">/home/uu</span>sama/mysql/bin  <span class="comment">//在最后一行加上</span></span><br></pre></td></tr></table></figure><div class="note info"><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果有后续的环境变量加载文件覆盖了<code>PATH</code>定义，则可能不生效</li></ul></div><h2 id="方法三：vim-bash-profile"><a href="#方法三：vim-bash-profile" class="headerlink" title="方法三：vim ~/.bash_profile"></a>方法三：<code>vim ~/.bash_profile</code></h2><p>和修改<code>~/.bashrc</code>文件类似，也是要在文件最后加上新的路径即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.<span class="property">bash_profile</span></span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="attr">$PATH</span>:<span class="regexp">/home/uu</span>sama/mysql/bin  <span class="comment">//在最后一行加上</span></span><br></pre></td></tr></table></figure><div class="note info"><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bash_profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果没有<code>~/.bash_profile</code>文件，则可以编辑<code>~/.profile</code>文件或者新建一个</li></ul></div><h2 id="方法四：vim-etc-bashrc"><a href="#方法四：vim-etc-bashrc" class="headerlink" title="方法四：vim /etc/bashrc"></a>方法四：<code>vim /etc/bashrc</code></h2><p>该方法是修改系统配置，需要管理员权限（如root）或者对该文件的写入权限：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/bashrc</span><br><span class="line">vim /etc/bashrc</span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="attr">$PATH</span>:<span class="regexp">/home/uu</span>sama/mysql/bin  <span class="comment">//在最后一行加上</span></span><br></pre></td></tr></table></figure><div class="note info"><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul></div><h2 id="方法五：vim-etc-profile"><a href="#方法五：vim-etc-profile" class="headerlink" title="方法五：vim /etc/profile"></a>方法五：<code>vim /etc/profile</code></h2><p>该方法修改系统配置，需要管理员权限或者对该文件的写入权限，和<code>vim /etc/bashrc</code>类似：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果/etc/profile文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/profile</span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="attr">$PATH</span>:<span class="regexp">/home/uu</span>sama/mysql/bin  <span class="comment">//在最后一行加上</span></span><br></pre></td></tr></table></figure><div class="note info"><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul></div><h2 id="方法六：vim-etc-environment"><a href="#方法六：vim-etc-environment" class="headerlink" title="方法六：vim /etc/environment"></a>方法六：<code>vim /etc/environment</code></h2><p>该方法是修改系统环境配置文件，需要管理员权限或者对该文件的写入权限：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/environment</span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="attr">$PATH</span>:<span class="regexp">/home/uu</span>sama/mysql/bin  <span class="comment">//在最后一行加上</span></span><br></pre></td></tr></table></figure><div class="note info"><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/environment</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul></div><h1 id="Linux环境变量加载原理解析"><a href="#Linux环境变量加载原理解析" class="headerlink" title="Linux环境变量加载原理解析"></a>Linux环境变量加载原理解析</h1><p>上面列出了环境变量的各种配置方法，那么Linux是如何加载这些配置的呢？是以什么样的顺序加载的呢？<br>特定的加载顺序会导致相同名称的环境变量定义被覆盖或者不生效。</p><h2 id="环境变量的分类"><a href="#环境变量的分类" class="headerlink" title="环境变量的分类"></a>环境变量的分类</h2><p>环境变量可以简单的分成用户自定义的环境变量以及系统级别的环境变量。</p><ul><li>用户级别环境变量定义文件：<code>~/.bashrc</code>、<code>~/.profile</code>（部分系统为：<code>~/.bash_profile</code>）</li><li>系统级别环境变量定义文件：<code>/etc/bashrc</code>、<code>/etc/profile</code>（部分系统为：<code>/etc/bash_profile</code>）、<code>/etc/environment</code></li></ul><p>另外在用户环境变量中，系统会首先读取<code>~/.bash_profile</code>（或者<code>~/.profile</code>）文件，如果没有该文件则读取<code>~/.bash_login</code>，根据这些文件中内容再去读取<code>~/.bashrc</code>。</p><h2 id="测试Linux环境变量加载顺序的方法"><a href="#测试Linux环境变量加载顺序的方法" class="headerlink" title="测试Linux环境变量加载顺序的方法"></a>测试Linux环境变量加载顺序的方法</h2><p>为了测试各个不同文件的环境变量加载顺序，我们在每个环境变量定义文件中的第一行都定义相同的环境变量<code>UU_ORDER</code>，该变量的值为本身的值连接上当前文件名称。</p><p>需要修改的文件如下：</p><ul><li>&#x2F;etc&#x2F;environment</li><li>&#x2F;etc&#x2F;profile</li><li>&#x2F;etc&#x2F;profile.d&#x2F;test.sh，新建文件，没有文件夹可略过</li><li>&#x2F;etc&#x2F;bashrc，或者&#x2F;etc&#x2F;bash.bashrc</li><li>&#x2F;.bash_profile，或者&#x2F;.profile</li><li>~&#x2F;.bashrc</li></ul><p>在每个文件中的第一行都加上下面这句代码，并相应的把冒号后的内容修改为当前文件的绝对文件名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="variable constant_">UU_ORDER</span>=<span class="string">&quot;$UU_ORDER:~/.bash_profile&quot;</span></span><br></pre></td></tr></table></figure><p>修改完之后保存，新开一个窗口，然后<code>echo $UU_ORDER</code>观察变量的值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uusama@<span class="attr">ubuntu</span>:~$ echo $UU_ORDER</span><br><span class="line"><span class="attr">$UU_ORDER</span>:<span class="regexp">/etc/</span><span class="attr">environment</span>:<span class="regexp">/etc/</span><span class="attr">profile</span>:<span class="regexp">/etc/</span>bash.<span class="property">bashrc</span>:<span class="regexp">/etc/</span>profile.<span class="property">d</span>/test.<span class="property">sh</span>:~<span class="regexp">/.profile:~/</span>.<span class="property">bashrc</span></span><br></pre></td></tr></table></figure><p>可以推测出Linux加载环境变量的顺序如下：</p><ul><li>&#x2F;etc&#x2F;environment</li><li>&#x2F;etc&#x2F;profile</li><li>&#x2F;etc&#x2F;bash.bashrc</li><li>&#x2F;etc&#x2F;profile.d&#x2F;test.sh</li><li>~&#x2F;.profile</li><li>~&#x2F;.bashrc</li></ul><h2 id="Linux环境变量文件加载详解"><a href="#Linux环境变量文件加载详解" class="headerlink" title="Linux环境变量文件加载详解"></a>Linux环境变量文件加载详解</h2><p>由上面的测试可容易得出Linux加载环境变量的顺序如下：</p><p>系统环境变量 -&gt; 用户自定义环境变量<br><code>/etc/environment</code> -&gt; <code>/etc/profile</code> -&gt; <code>~/.profile</code></p><p>打开<code>/etc/profile</code>文件你会发现，该文件的代码中会加载<code>/etc/bash.bashrc</code>文件，然后检查<code>/etc/profile.d/</code>目录下的<code>.sh</code>文件并加载。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/profile: system-wide .profile file for the Bourne shell (sh(1))</span></span><br><span class="line"><span class="comment"># and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</span></span><br><span class="line"></span><br><span class="line"><span class="string">if</span> [ <span class="string">&quot;$PS1&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">  <span class="string">if</span> [ <span class="string">&quot;$BASH&quot;</span> ] <span class="string">&amp;&amp;</span> [ <span class="string">&quot;$BASH&quot;</span> <span class="type">!=</span> <span class="string">&quot;/bin/sh&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">    <span class="comment"># The file bash.bashrc already sets the default PS1.</span></span><br><span class="line">    <span class="comment"># PS1=&#x27;\h:\w\$ &#x27;</span></span><br><span class="line">    <span class="string">if</span> [ <span class="string">-f</span> <span class="string">/etc/bash.bashrc</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">      <span class="string">.</span> <span class="string">/etc/bash.bashrc</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line">  <span class="string">else</span></span><br><span class="line">    <span class="string">if</span> [ <span class="string">&quot;`id -u`&quot;</span> <span class="string">-eq</span> <span class="number">0</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">      <span class="string">PS1=&#x27;#</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">      PS1=&#x27;</span><span class="string">$</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">  fi</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if [ -d /etc/profile.d ]; then</span></span><br><span class="line"><span class="string">  for i in /etc/profile.d/*.sh; do</span></span><br><span class="line"><span class="string">    if [ -r $i ]; then</span></span><br><span class="line"><span class="string">      . $i</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">  done</span></span><br><span class="line"><span class="string">  unset i</span></span><br><span class="line"><span class="string">fi</span></span><br></pre></td></tr></table></figure><p>其次再打开<code>~/.profile</code>文件，会发现该文件中加载了<code>~/.bashrc</code>文件。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># if running bash</span></span><br><span class="line"><span class="string">if</span> [ <span class="string">-n</span> <span class="string">&quot;$BASH_VERSION&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line">    <span class="comment"># include .bashrc if it exists</span></span><br><span class="line">    <span class="string">if</span> [ <span class="string">-f</span> <span class="string">&quot;$HOME/.bashrc&quot;</span> ]<span class="string">;</span> <span class="string">then</span></span><br><span class="line"><span class="string">.</span> <span class="string">&quot;$HOME/.bashrc&quot;</span></span><br><span class="line">    <span class="string">fi</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set PATH so it includes user&#x27;s private bin directories</span></span><br><span class="line"><span class="string">PATH=&quot;$HOME/bin:$HOME/.local/bin:$PATH&quot;</span></span><br></pre></td></tr></table></figure><p>从<code>~/.profile</code>文件中代码不难发现，<code>/.profile</code>文件只在用户登录的时候读取一次，而<code>/.bashrc</code>会在每次运行<code>Shell</code>脚本的时候读取一次。</p><h2 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h2><p>可以自定义一个环境变量文件，比如在某个项目下定义<code>uusama.profile</code>，在这个文件中使用<code>export</code>定义一系列变量，然后在<code>~/.profile</code>文件后面加上：<code>sourc uusama.profile</code>，这样你每次登陆都可以在<code>Shell</code>脚本中使用自己定义的一系列变量。</p><p>也可以使用<code>alias</code>命令定义一些命令的别名，比如<code>alias rm=&quot;rm -i&quot;</code>（双引号必须），并把这个代码加入到<code>~/.profile</code>中，这样你每次使用<code>rm</code>命令的时候，都相当于使用<code>rm -i</code>命令，非常方便。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 系统变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux升级内核的正确姿势</title>
      <link href="/posts/3b4dd97/"/>
      <url>/posts/3b4dd97/</url>
      
        <content type="html"><![CDATA[<p>本文介绍了下如何在<strong>Ubuntu</strong>类发行版手动更新linux内核的具体步骤。<br>同样其他<strong>Debian</strong>类版本也可以适用。</p><span id="more"></span><h1 id="Linux升级内核的正确姿势"><a href="#Linux升级内核的正确姿势" class="headerlink" title="Linux升级内核的正确姿势"></a>Linux升级内核的正确姿势</h1><p>很多童鞋在玩耍linux发行版的时候，都会遇到各种各样的问题，比如：网卡不能使用，亮度不能调节，触摸板不能识别，蓝牙不能使用等等，这些关系都和linux的内核有关系。</p><h1 id="什么是linux内核？"><a href="#什么是linux内核？" class="headerlink" title="什么是linux内核？"></a>什么是linux内核？</h1><p><a href="https://www.kernel.org/"><strong>Linux内核</strong></a>（英语：Linux kernel），是一种开源的<a href="https://zh.wikipedia.org/wiki/%E7%B1%BBUnix%E7%B3%BB%E7%BB%9F"><strong>类Unix操作系统</strong></a>宏内核。</p><p><strong>Linux内核</strong>最早是于1991年由芬兰黑客<strong>林纳斯·托瓦兹</strong>为自己的个人计算机开发的，他当时在<strong>Usenet</strong>新闻组<strong>comp.os.minix</strong>登载帖子，这份著名的帖子标志着Linux内核计划的正式开始。如今，该计划已经拓展到支持大量的计算机体系架构，远超其他操作系统和内核。它迅速吸引了一批开发者和用户，利用它作为其他自由软件项目的内核，如著名的 <strong>GNU</strong> 操作系统。</p><h2 id="内核长什么样子呢？"><a href="#内核长什么样子呢？" class="headerlink" title="内核长什么样子呢？"></a>内核长什么样子呢？</h2><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/linux/%E5%86%85%E6%A0%B8/%E5%86%85%E6%A0%B8.png" alt="内核样例"></p><p>查看当前内核<br>打开终端执行：</p><figure class="highlight js"><figcaption><span>查看内核版本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"><span class="number">5.5</span><span class="number">.0</span>-<span class="number">050500</span>-generic</span><br></pre></td></tr></table></figure><p>当前电脑内核为5.5.0版本，一般更换内核我们是将内核升级为更高版本。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>目前下载有很多地址，我主要使用以下两个：</p><ul><li>github上下载<a href="https://github.com/torvalds/linux/releases"><strong>Linux kernel</strong></a></li><li>ubuntu的仓库中下载<a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/"><strong>Linux kernel</strong></a></li></ul><h2 id="内核需要下载那些文件？"><a href="#内核需要下载那些文件？" class="headerlink" title="内核需要下载那些文件？"></a>内核需要下载那些文件？</h2><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/linux/%E5%86%85%E6%A0%B8/%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC%E5%8F%B7.jpg" alt="版本号"></p><div class="note info"><p><strong>amd64</strong> 对应的X64位计算机操作系统（Intel、AMD）<br><strong>arm64</strong> 对应移动终端CPU（高通骁龙、三星猎户座、华为麒麟）</p></div><h1 id="安装顺序"><a href="#安装顺序" class="headerlink" title="安装顺序"></a>安装顺序</h1><p>使用<code>sudo dpkg -i ***.deb</code>的形式安装。</p><ul><li><p>安装 <strong>linux-headers-5.5.0-050500_5.5.0-050500.202001262030_all.deb</strong></p></li><li><p>安装 <strong>linux-headers-5.5.0-050500-generic_5.5.0-050500.202001262030_amd64.deb</strong></p></li><li><p>安装 <strong>linux-modules-5.5.0-050500-generic_5.5.0-050500.202001262030_amd64.deb</strong></p></li><li><p>安装 <strong>linux-image-unsigned-5.5.0-050500-generic_5.5.0-050500.202001262030_amd64.deb</strong></p></li></ul><p>安装完成后重启即可。</p><h1 id="删除多余内核"><a href="#删除多余内核" class="headerlink" title="删除多余内核"></a>删除多余内核</h1><h2 id="查看当前系统安装的内核"><a href="#查看当前系统安装的内核" class="headerlink" title="查看当前系统安装的内核"></a>查看当前系统安装的内核</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --get-selections| grep linux</span><br></pre></td></tr></table></figure><p><img src="https://tuchuang-1258561688.cos.ap-chengdu.myqcloud.com/linux/%E5%86%85%E6%A0%B8/2020-03-29%2022-04-30%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="所安装的内核"></p><h2 id="卸载内核"><a href="#卸载内核" class="headerlink" title="卸载内核"></a>卸载内核</h2><p>可以看到系统已经安装了多个内核版本，包括 <code>headers</code> 和 <code>image</code> ，可以删除这些来卸载旧的内核。</p><p>比如删除 4.4.0-22 内核，我们看到上面只有 headers，因此可以这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --purge linux-headers-4.4.0-22</span><br><span class="line">sudo apt-get remove --purge linux-image-4.2.0-22-generic</span><br></pre></td></tr></table></figure><p>以此类推。</p><p>然后终端执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoclean</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><p>然后重启电脑即可。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 内核 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 19.10 安装完该做的几件事</title>
      <link href="/posts/221d075/"/>
      <url>/posts/221d075/</url>
      
        <content type="html"><![CDATA[<p>刚开始安装的<strong>Ubuntu</strong>各种不顺手，Gnome界面也是非常难看，本文介绍从刚安装完<strong>Ubuntu 19.10</strong>后，需要开始做的几个步骤来初始化顺手好看的系统。</p><span id="more"></span><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h1><p><strong>Linux&#x2F;Unix</strong>提供了很多种的Shell，但是为什么要存在这么多的Shell。其实这就像你的同一种类型的衣服有不同的款式一般。记得有一个评论家说的，程序员就是负责把复杂的事情搞简单，然后再把简单的事情搞复杂，<strong>Linux</strong>真的是完全体现了这一点的精髓。一个功能可以使用各种软件包实现，每个软件包也有各种版本。所以，程序员真的十分喜欢<strong>Linux</strong>。但普通人对此就只能表示呵呵了。</p><p>很多程序员看到不爽的Shell，心情一好，顺手就写了一个符合自己心意的。开源社区游一圈，其他的程序员觉得这个新的Shell看起来还不错，而且自己对他还有点新想法。然后写一段代码Push。慢慢的就行成了一些新的标准。但是Shell的种类也越来越多了。</p><p>常用的Shell有以下几类：<strong>Bourne shell</strong>、<strong>C shell</strong>、<strong>Korn shell</strong>。</p><p>上图中的就是<strong>Ubuntu</strong>及其衍生版本自带的Shell，名字是<strong>bash</strong>，文件路径位<code>/usr/bin/bash</code>。<strong>bash</strong>是<strong>GNU</strong>计划编写的Unix Shell。他的名称是<strong>Bourne-Again Shell</strong>的首字母缩写。由布莱恩·福克斯创造。Bash同时也是很多<strong>Linux</strong>发行版本的默认命令行Shell。<strong>Bash</strong>优点在于和系统的集成化程度比较高，对于很多操作错误都有比较完善的提示。</p><blockquote><p>注：Shell分为图形界面Shell和命令行界面Shell，这里只讨论命令行界面Shell。</p></blockquote><p><code>oh my zsh</code>是对zsh的强化。zsh是一款功能强大的Shell终端软件，既可以作为一个交互式终端，也可以作为一个脚本解释器。它在兼容<strong>Bash</strong>的同时（默认不兼容，除非设置成emulate sh）还有很多的改进，这里不多做解释，有兴趣的可以查阅zsh的wiki。同时zsh还是OSX的默认命令行Shell。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先安装几个包：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh git curl</span><br></pre></td></tr></table></figure><p>安装完成后用命令安装<code>oh-my-zsh</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</span></span><br></pre></td></tr></table></figure><p>或者，可以从源中更方便的安装，只不过更新速度不如以上方式。<br>Ubuntu及其衍生版本软件源中就有zsh。我们只需要使用apt命令安装它就可以了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br></pre></td></tr></table></figure><h2 id="zsh插件"><a href="#zsh插件" class="headerlink" title="zsh插件"></a>zsh插件</h2><p>建议，还可以安装几个oh-my-zsh的<code>自动完成</code>、<code>建议</code>以及<code>语法高亮</code>插件，可以极大的增加输入效率。</p><figure class="highlight js"><figcaption><span>.oh-my-zsh/plugins</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd .<span class="property">oh</span>-my-zsh/plugins</span><br><span class="line">git clone <span class="attr">https</span>:<span class="comment">//github.com/zsh-users/zsh-autosuggestions</span></span><br><span class="line">git clone <span class="attr">https</span>:<span class="comment">//github.com/zsh-users/zsh-syntax-highlighting.git</span></span><br><span class="line">git clone <span class="attr">https</span>:<span class="comment">//github.com/zsh-users/zsh-completions</span></span><br></pre></td></tr></table></figure><p>将这几个包克隆完之后，需要打开.zshrc配置文件，然后在配置文件中添加这几个插件。</p><figure class="highlight js"><figcaption><span>home/.zshrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git zsh-autosuggestions  zsh-syntax-highlighting zsh-completions)</span><br></pre></td></tr></table></figure><h2 id="修改默认zsh主题"><a href="#修改默认zsh主题" class="headerlink" title="修改默认zsh主题"></a>修改默认zsh主题</h2><figure class="highlight php"><figcaption><span>user/.zshrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure><div class="note info"><p><strong>注意</strong>：此主题一些编码问题会造成乱码，安装<code>powerline</code>相关的字体可解决修复。</p></div><h2 id="修改头部用户信息"><a href="#修改头部用户信息" class="headerlink" title="修改头部用户信息"></a>修改头部用户信息</h2><p>信息修改在自定义的主题里面，此处以我用的<code>agnoster.zsh-theme</code>为例。</p><figure class="highlight js"><figcaption><span>/home/vector/.oh-my-zsh/themes/agnoster.zsh-theme</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#prompt_segment black <span class="keyword">default</span> <span class="string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)%n@%m&quot;</span>  <span class="comment">//注释掉</span></span><br><span class="line">prompt_segment black <span class="keyword">default</span> <span class="string">&quot;%(!.%&#123;%F&#123;yellow&#125;%&#125;.)Vector&quot;</span></span><br></pre></td></tr></table></figure><div class="note info"><p><strong>%n@%m</strong> 是原本的默认名字，**%n<strong>是用户名，</strong>%m**是本机名。</p></div><h1 id="更新系统与源"><a href="#更新系统与源" class="headerlink" title="更新系统与源"></a>更新系统与源</h1><p>为了让软件下载与系统更新更快点，推荐将更新源改为国内的更新源。这里推荐使用阿里云的更新源。</p><p>阿里云更新源</p><figure class="highlight js"><figcaption><span>18.04版本 - bionic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>19.10版本 - eoan</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deb <span class="attr">http</span>:<span class="comment">//archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//archive.canonical.com/ubuntu xenial partner</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ eoan main universe restricted multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//security.ubuntu.com/ubuntu/ eoan-security main universe restricted multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ eoan-updates main universe restricted multiverse</span></span><br><span class="line">deb <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ eoan-backports main universe restricted multiverse</span></span><br><span class="line">deb-src <span class="attr">http</span>:<span class="comment">//mirrors.aliyun.com/ubuntu/ eoan main universe restricted multiverse</span></span><br></pre></td></tr></table></figure><p>更换方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>将文件的内容替换为阿里云的更新源<code>:wq</code>保存</p><p>进行系统更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h1 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h1><h2 id="安装Gnome优化工具"><a href="#安装Gnome优化工具" class="headerlink" title="安装Gnome优化工具"></a>安装Gnome优化工具</h2><p>在 Ubuntu 19.10 系统安装好之后强烈推荐大家安装 Tweaks 应用程序，该应用程序可以将系统隐藏的设置选项解锁，从而可以更好地控制 Ubuntu 和 GNOME 桌面的行为方式。</p><p>Tweaks 实用程序提供了比标准设置应用程序中列出更广泛的设置选项，包括：</p><ul><li>更改 GTK 和图标主题</li><li>将窗口按钮左移</li><li>更改桌面字体大小</li><li>拖动到屏幕边缘时平铺窗口</li><li>在顶部条形时钟显示当前工作日</li></ul><p>对于 Ubuntu 而言，Tweaks 是一款名副其实的瑞士军刀</p><figure class="highlight js"><figcaption><span>安装gnome-tweak</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gnome-tweak-tool</span><br></pre></td></tr></table></figure><p>安装完成之后可以从终端输入<code>gnome-tweak-tool</code>打开，也可以从软件列表寻找 <code>工具-&gt;优化</code> 来打开。</p><h2 id="配置Gnome扩展"><a href="#配置Gnome扩展" class="headerlink" title="配置Gnome扩展"></a>配置Gnome扩展</h2><p>首先安装浏览器插件，从这里寻找你的浏览器版本，然后安装即可。然后使用下面的命令安装后台服务。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install chrome-gnome-shell</span><br></pre></td></tr></table></figure><p>安装完毕之后打开<a href="https://extensions.gnome.org/"><strong>Gnome扩展网站</strong></a>，可以发现现在这个网站上面的扩展都会多出一个开关，点击这个开关即可直接将扩展安装到系统中。我比较喜欢Dash to Dock这个插件，比Gnome默认的Dock好用。</p><h2 id="推荐扩展"><a href="#推荐扩展" class="headerlink" title="推荐扩展"></a>推荐扩展</h2><ul><li><a href="https://extensions.gnome.org/extension/307/dash-to-dock/">Dash to Dock</a></li><li><a href="https://extensions.gnome.org/extension/744/hide-activities-button/">Hide Activities Button</a></li><li><a href="https://extensions.gnome.org/extension/2141/horizontal-workspaces/">Horizontal workspaces</a></li><li><a href="https://extensions.gnome.org/extension/104/netspeed/">NetSpeed</a></li><li><a href="https://extensions.gnome.org/extension/723/pixel-saver/">Pixel Saver</a></li><li><a href="https://extensions.gnome.org/extension/800/remove-dropdown-arrows/">Remove Dropdown Arrows</a></li><li><a href="https://extensions.gnome.org/extension/19/user-themes/">User Themes</a></li><li><a href="https://extensions.gnome.org/extension/1460/vitals/">Vitals</a></li></ul><h1 id="系统微调"><a href="#系统微调" class="headerlink" title="系统微调"></a>系统微调</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ttf-mscorefonts-installer    <span class="comment">//安装微软字体</span></span><br><span class="line">timedatectl set-local-rtc <span class="number">1</span> --adjust-system-clock    <span class="comment">//调整时区和windows一致</span></span><br><span class="line">sudo apt-get install fonts-wqy-zenhei    <span class="comment">//文泉驿点阵正黑字体 </span></span><br><span class="line">sudo apt-get install ubuntu-restricted-extras    <span class="comment">//安装ubuntu受限的额外的解码器</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《6、多终端同步配置》</title>
      <link href="/posts/d12e6791/"/>
      <url>/posts/d12e6791/</url>
      
        <content type="html"><![CDATA[<p>对于有多个终端的朋友们（多设备或者多操作系统），初始化的hexo本地文档进行过多项修改，如果更换了设备或者操作系统则又会是一件麻烦事。怎么可以用Git的方法进行本地Hexo文档的同步以及更新呢，这样直接在新设备也可以把Hexo本地文档进行同步clone，这样一来，更加方便创作！</p><p>主体的思路是将博文内容相关文件放在Github项目中master中，将Hexo配置写博客用的相关文件放在Github项目的hexo分支上，这个是关键，多终端的同步只需要对分支hexo进行操作。</p><span id="more"></span><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><ul><li>Git</li><li>Node.js</li><li>Hexo初始化</li></ul><p>安装完相关软件记得添加相应的环境变量。</p><h1 id="Push本地文档到Coding-Github的Hexo分支上"><a href="#Push本地文档到Coding-Github的Hexo分支上" class="headerlink" title="Push本地文档到Coding/Github的Hexo分支上"></a>Push本地文档到<code>Coding/Github</code>的Hexo分支上</h1><p>在利用<code>Coding/Github+Hexo</code>搭建自己的博客时，新建了一个Hexo的文件夹，并进行相关的配置，这部分主要是将这些配置的文件托管到<code>Coding/Github</code>项目的分支上，其中只托管部分用于多终端的同步的文件，如完成的效果图所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git init   <span class="comment">//初始化本地仓库</span></span><br><span class="line">git add source   <span class="comment">//将必要的文件依次添加，以source为例</span></span><br><span class="line">git add .   <span class="comment">//与上条命令二选一</span></span><br><span class="line">git commit -m <span class="string">&quot;Blog Source Hexo&quot;</span>  <span class="comment">//提交评论</span></span><br><span class="line">git branch <span class="title class_">Hexo</span>   <span class="comment">//新建Hexo分支</span></span><br><span class="line">git checkout hexo   <span class="comment">//切换到Hexo分支上</span></span><br><span class="line">git remote add origin git@yourname.<span class="property">github</span>.<span class="property">com</span>/yourname.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span>   <span class="comment">//将本地与Github项目对接</span></span><br><span class="line">git push origin hexo   <span class="comment">//push到Github项目的hexo分支上</span></span><br></pre></td></tr></table></figure><div class="note info"><p>有些文件夹如npm install产生的node_modules由于路径过长不好处理，所以这里没有用<code>git add .</code>命令了，而是依次添加必要文件夹。</p></div><p>这样你的github项目中就会多出一个Hexo分支，这个就是用于多终端同步关键的部分。</p><h1 id="第二终端完成clone和push更新"><a href="#第二终端完成clone和push更新" class="headerlink" title="第二终端完成clone和push更新"></a>第二终端完成clone和push更新</h1><p>此时在另一终端更新博客，只需要将Github的hexo分支clone下来，进行初次的相关配置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone -b hexo git@yourname.<span class="property">github</span>.<span class="property">com</span>/yourname.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span>   <span class="comment">//将Github中hexo分支clone到本地</span></span><br><span class="line">cd  yourname.<span class="property">github</span>.<span class="property">io</span>   <span class="comment">//切换到刚刚clone的文件夹内</span></span><br><span class="line">npm install    <span class="comment">//注意，这里一定要切换到刚刚clone的文件夹内执行，安装必要的所需组件，不用再init</span></span><br><span class="line">hexo <span class="keyword">new</span> post <span class="string">&quot;new blog name&quot;</span>   <span class="comment">//新建一个.md文件，并编辑完成自己的博客内容</span></span><br><span class="line">git add source  <span class="comment">//经测试每次只要更新sorcerer中的文件到Github中即可，因为只是新建了一篇新博客</span></span><br><span class="line">git add .     <span class="comment">//和上条命令一样，更新添加此目录全部文档，二选一</span></span><br><span class="line">git commit -m <span class="string">&quot;new blog&quot;</span>    <span class="comment">//评论随便写</span></span><br><span class="line">git push origin hexo    <span class="comment">//更新推送分支</span></span><br><span class="line">hexo d -g     <span class="comment">//push更新完分支之后将自己写的博客对接到自己搭的博客网站上，同时同步了Github中的master</span></span><br></pre></td></tr></table></figure><h1 id="不同终端间愉快地玩耍"><a href="#不同终端间愉快地玩耍" class="headerlink" title="不同终端间愉快地玩耍"></a>不同终端间愉快地玩耍</h1><p>在不同的终端已经做完配置，就可以愉快的分享自己更新的博客，进入自己相应的文件夹。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git pull origin hexo    <span class="comment">//先pull完成本地与远端的融合</span></span><br><span class="line">hexo <span class="keyword">new</span> post <span class="string">&quot; new blog name&quot;</span>   <span class="comment">//新建一个.md文件，并编辑完成自己的博客内容</span></span><br><span class="line">git add source  <span class="comment">//经测试每次只要更新sorcerer中的文件到Github中即可，因为只是新建了一篇新博客</span></span><br><span class="line">git add .      <span class="comment">//和上条命令一样，更新添加此目录全部文档，二选一</span></span><br><span class="line">git commit -m <span class="string">&quot;XX&quot;</span>   <span class="comment">//评论随便写</span></span><br><span class="line">git push origin hexo</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《四、功能强化》</title>
      <link href="/posts/313ccf89/"/>
      <url>/posts/313ccf89/</url>
      
        <content type="html"><![CDATA[<p>本文针对于功能性做了一些优化和建议。包括：</p><ul><li>多线部署（Github 和 Coding Page）</li><li>博客文章链接优化</li><li>百度URL主动推送（搜索）</li><li>添加评论功能</li><li>SEO优化</li></ul><span id="more"></span><h1 id="多线部署"><a href="#多线部署" class="headerlink" title="多线部署"></a>多线部署</h1><p>由于众所周知的原因，在Github Page上的网页在国内的网速并不是很好。所以很多人都会在国内同样部署（码云、Coding Page），这样一来有多个Git文档需要同步，怎么操作呢？</p><figure class="highlight yml"><figcaption><span>hexoblog/</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> </span><br><span class="line">      <span class="attr">coding:</span> <span class="string">https://e.coding.net/vectorcode/vector.git</span></span><br><span class="line">      <span class="comment"># github: https://github.com/MichaelVector/michaelvector.github.io.git</span></span><br><span class="line">      <span class="comment"># gitee: https://gitee.com/michaelvector/michaelvector.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h1 id="博客文章链接优化"><a href="#博客文章链接优化" class="headerlink" title="博客文章链接优化"></a>博客文章链接优化</h1><h2 id="博客网址链接-URL-唯一且永久化"><a href="#博客网址链接-URL-唯一且永久化" class="headerlink" title="博客网址链接 URL 唯一且永久化"></a>博客网址链接 URL 唯一且永久化</h2><p>使用插件 <a href="https://github.com/rozbo/hexo-abbrlink"><strong>hexo-abbrlink</strong></a>可以做到自定义文章链接，而且没有年月日等多级目录，SEO搜索也方便很多。</p><h2 id="安装hexo-abbrlink"><a href="#安装hexo-abbrlink" class="headerlink" title="安装hexo-abbrlink"></a>安装hexo-abbrlink</h2><figure class="highlight py"><figcaption><span>代码</span><a href="https://github.com/rozbo/hexo-abbrlink">官方链接</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span> <span class="comment">#abbrlink配置</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br></pre></td></tr></table></figure><p> 样例</p><figure class="highlight yml"><figcaption><span>代码效果</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#crc16 &amp; hex</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/66c8.html</span></span><br><span class="line"><span class="comment">#crc16 &amp; dec</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/65535.html</span></span><br><span class="line"><span class="comment">#crc32 &amp; hex</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/8ddf18fb.html</span></span><br><span class="line"><span class="comment">#crc32 &amp; dec</span></span><br><span class="line"><span class="string">https://post.zz173.com/posts/1690090958.html</span></span><br></pre></td></tr></table></figure><p>这样就确保了博文链接的唯一化，只要不修改md文件的abbrlink的值，URL就永久不会改变。<br>如此 md 文件名和文件内容也可以随便改了。这样也有利于 SEO 优化。</p><h1 id="百度URL主动推送（搜索）"><a href="#百度URL主动推送（搜索）" class="headerlink" title="百度URL主动推送（搜索）"></a>百度URL主动推送（搜索）</h1><p>主动推送Hexo博客新链接至百度搜索引擎，解决百度爬虫被禁止访问的问题，提升网站收录质量和速度。</p><blockquote><p>SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</p></blockquote><h2 id="四种方式对比"><a href="#四种方式对比" class="headerlink" title="四种方式对比"></a>四种方式对比</h2><ul><li><strong>主动推送</strong>：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录</li><li><strong>自动推送</strong>：是轻量级链接提交组件，将自动推送的 JS 代码放置在站点每一个页面源代码中，当页面被访问时，页面链接会自动推送给百度，有利于新页面更快被百度发现</li><li><strong>sitemap</strong>：您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送</li><li><strong>手动提交</strong>：如果您不想通过程序提交，那么可以采用此种方式，手动将链接提交给百度</li></ul><p>网站在没有提交搜索引擎收录之前，直接搜索你网站的内容是搜不到的，只有提交搜索引擎之后，搜索引擎才能收录你的站点，通过爬虫抓取你网站的东西，对于 hexo 博客来说，如果你是部署在 GitHub Pages，那么你是无法被百度收录的，因为 GitHub 禁止了百度爬虫，最常见的解决办法是双线部署到 Coding Pages 和 GitHub Pages，因为百度爬虫可以爬取到 Coding 上的内容，从而实现百度收录。另外百度收录的所需的时间较长，大约半个月左右才会看到效果！</p><h2 id="主动推送（推荐）"><a href="#主动推送（推荐）" class="headerlink" title="主动推送（推荐）"></a>主动推送（推荐）</h2><p>在博客根目录安装插件 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><p>然后在根目录 _config.yml 文件里写入以下配置：</p><figure class="highlight yml"><figcaption><span>_config.yml</span><a href="https://github.com/huiwang/hexo-baidu-url-submit">官方链接</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">100</span> <span class="comment"># 提交最新的1000个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://vector.today</span> <span class="comment"># 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">XXXXXXX</span> <span class="comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span> <span class="comment"># 默认每次重新部署</span></span><br></pre></td></tr></table></figure><h2 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h2><p>关于自动推送百度官网给出的解释是：自动推送是百度搜索资源平台为提高站点新增网页发现速度推出的工具，安装自动推送JS代码的网页，在页面被访问时，页面URL将立即被推送给百度。</p><p>此时要注意，有些 hexo 主题集成了这项功能，比如 next 主题，在 <code>themes\next\layout\third-party\baidu-push.swig</code>文件，我们只需要把如下代码粘贴到该文件，然后在主题配置文件设置 <code>baidu_push: true</code> 即可。</p><figure class="highlight js"><figcaption><span>themes\next\layout\third-party\baidu-push.swig</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">baidu_push</span> %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> bp = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> curProtocol = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">protocol</span>.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">&#x27;https&#x27;</span>) &#123;</span><br><span class="line">        bp.<span class="property">src</span> = <span class="string">&#x27;https://zz.bdstatic.com/linksubmit/push.js&#x27;</span>;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.<span class="property">src</span> = <span class="string">&#x27;http://push.zhanzhang.baidu.com/push.js&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;script&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    s.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h2><p>首先我们在网页根目录要使用以下命令生成一个网站地图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>这里也注意一下，将根目录的 <code>_config.yml</code> 文件，URL 改为在百度站长平台添加的域名，也就是你网站的首页地址：</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://vector.today</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure><p>配置如下（在根目录的<code>_config.yml</code>里进行添加）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># hexo sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>然后使用命令 <code>hexo g -d</code> 将网站部署上去，然后访问 <strong>你的首页&#x2F;sitemap.xml</strong> 或者 <strong>你的首页&#x2F;baidusitemap.xml</strong> 就可以看到网站地图了</p><blockquote><p>其中 <em>sitemap.xml</em> 文件是搜索引擎通用的 sitemap 文件，<em>baidusitemap.xml</em> 是百度专用的 sitemap 文件。</p></blockquote><p>然后来到百度站长平台的 sitemap 提交页面，将你的 sitemap 地址提交即可，如果成功的话状态会显示为正常，初次提交要等几分钟，sitemap.xml 相比 baidusitemap.xml 来说等待时间也会更长，如果以后你博客有新的文章或其他页面，可以点击手动更新文件，更新一下新的 sitemap。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《三、写作技巧》</title>
      <link href="/posts/c186edd8/"/>
      <url>/posts/c186edd8/</url>
      
        <content type="html"><![CDATA[<p>本文列举了Markdown的基本写法和Next特定的一些语句表达，学习可以写出更漂亮的文章。<br>部分Markdown的基本语法在 <a href="https://vector.today/posts/cdf39821/">Markdown学习模版</a> 可以了解并学习。</p><span id="more"></span><h1 id="中心引用"><a href="#中心引用" class="headerlink" title="中心引用"></a>中心引用</h1><p>代码：</p><blockquote class="blockquote-center"><p>Hexo平台，Next主题</p></blockquote><p>效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125;Hexo平台，Next主题&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><h1 id="Note-注释"><a href="#Note-注释" class="headerlink" title="Note-注释"></a>Note-注释</h1><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] %&#125;</span><br><span class="line">Default Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note info"><p>支持的 <strong>class</strong> 种类包括 <strong>default</strong> <strong>primary</strong> <strong>success</strong> <strong>info</strong> <strong>warning</strong> <strong>dange</strong>r，也可以不指定 <strong>class</strong>。</p></div><p>效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Note %&#125;</span><br></pre></td></tr></table></figure><!-- tab 默认样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">Default Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default"><p>Default Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 首要样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note primary %&#125;</span><br><span class="line">Primary Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note primary"><p>Primary Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 注意样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info %&#125;</span><br><span class="line">Info Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note info"><p>Info Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 成功样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note success %&#125;</span><br><span class="line">Success Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note success"><p>Success Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 警告样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note warning %&#125;</span><br><span class="line">Warning Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note warning"><p>Warning Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 危险样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note danger %&#125;</span><br><span class="line">Danger Header</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note danger"><p>Danger Header<br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog!</a></p></div><!-- endtab --><!-- tab 无图标样式 --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info no-icon %&#125;</span><br><span class="line">No icon note</span><br><span class="line">Note **without** icon: `note info no-icon`</span><br><span class="line">**欢迎**来到我的[Blog!](https://vector.today/)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon"><p>No icon note<br>Note <strong>without</strong> icon: <code>note info no-icon</code><br><strong>欢迎</strong>来到我的<a href="https://vector.today/">Blog！</a></p></div><!-- endtab --><!-- tab 表格@ --><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Table in Note</span><br><span class="line">&#123;% note default %&#125;</span><br><span class="line">| 1 | 2 |</span><br><span class="line">| - | - |</span><br><span class="line">| 3 | 4 |</span><br><span class="line">| 5 | 6 |</span><br><span class="line">| 7 | 8 |</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>Table in Note</p><div class="note default"><table><thead><tr><th>1</th><th>2</th></tr></thead><tbody><tr><td>3</td><td>4</td></tr><tr><td>5</td><td>6</td></tr><tr><td>7</td><td>8</td></tr></tbody></table></div><!-- endtab --><h1 id="Tab标签"><a href="#Tab标签" class="headerlink" title="Tab标签"></a>Tab标签</h1><p>设置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tabs:</span></span><br><span class="line">  <span class="attr">transition:</span></span><br><span class="line">    <span class="attr">tabs:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">labels:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>语法代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 标签默认名字 %&#125;</span><br><span class="line">&lt;!-- tab 标签1的名字@text-width --&gt;</span><br><span class="line">标签1的内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 标签2的名字@amazon --&gt;</span><br><span class="line">标签2的内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 标签3的名字@bold --&gt;</span><br><span class="line">标签3的内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><div class="tabs" id="标签默认名字"><ul class="nav-tabs"><li class="tab active"><a href="#标签默认名字-1"><i class="fa fa-text-width"></i>标签1的名字</a></li><li class="tab"><a href="#标签默认名字-2"><i class="fa fa-amazon"></i>标签2的名字</a></li><li class="tab"><a href="#标签默认名字-3"><i class="fa fa-bold"></i>标签3的名字</a></li></ul><div class="tab-content"><div class="tab-pane active" id="标签默认名字-1"><p>标签1的内容</p></div><div class="tab-pane" id="标签默认名字-2"><p>标签2的内容</p></div><div class="tab-pane" id="标签默认名字-3"><p>标签3的内容</p></div></div></div><h1 id="文字标签"><a href="#文字标签" class="headerlink" title="文字标签"></a>文字标签</h1><p>使用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line">&#123;% label [属性]@文字 %&#125;</span><br><span class="line"></span><br><span class="line">[class] : default | primary | success | info | warning | danger.</span><br><span class="line">          &#x27;@Text&#x27; can be specified with or without space</span><br><span class="line">          E.g. &#x27;success @text&#x27; similar to &#x27;success@text&#x27;.</span><br><span class="line">          If not specified, default class will be selected.</span><br></pre></td></tr></table></figure><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Lorem &#123;% label @ipsum %&#125; &#123;% label primary@dolor sit %&#125; amet.</span><br><span class="line">consectetur &#123;% label success@adipiscing elit, %&#125; sfs.</span><br><span class="line">daed &#123;% label info@do eiusmod %&#125; tempor.</span><br><span class="line">Ut enim *&#123;% label warning @ad %&#125;* minim veniam.</span><br><span class="line">quis **&#123;% label danger@nostrud %&#125;** exercitation.</span><br><span class="line">Duis aute irure dolor ~~&#123;% label default @velit %&#125;~~ &lt;mark&gt;esse&lt;/mark&gt; cillum.</span><br></pre></td></tr></table></figure><p>Lorem <mark class="label ">ipsum</mark> <mark class="label primary">dolor sit</mark> amet.<br>consectetur <mark class="label success">adipiscing elit,</mark> sfs.<br>daed <mark class="label info">do eiusmod</mark> tempor.<br>Ut enim <em><mark class="label warning">ad</mark></em> minim veniam.<br>quis <strong><mark class="label danger">nostrud</mark></strong> exercitation.<br>Duis aute irure dolor <del><mark class="label default">velit</mark></del> <mark>esse</mark> cillum.</p><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p>可以通过为代码块附加参数的形式为其添加更丰富的信息提示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```yml 代码标题 https://vector.today 链接文字</span><br><span class="line">tab: true</span><br><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```yml 代码标题 https://vector.today 链接文字</span><br><span class="line">tab: true</span><br><span class="line">pace:</span><br><span class="line">  enable: true</span><br><span class="line">  theme: minimal</span><br></pre></td></tr></table></figure><!-- tab 注意样式 --><div class="note info"><ul><li><strong>langugae</strong>：语言名称，引导渲染引擎正确解析并高亮显示关键字</li><li><strong>title</strong>：代码块标题，将会显示在左上角</li><li><strong>url</strong>：链接地址，如果没有指定 link text 则会在右上角显示 link</li><li><strong>link text</strong>：链接名称，指定 url 后有效，将会显示在右上角</li></ul></div><!-- endtab --><h1 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button url, text, icon [<span class="keyword">class</span>], [title] %&#125;</span><br><span class="line">&lt;!-- <span class="title class_">Tag</span> <span class="title class_">Alias</span> --&gt;</span><br><span class="line">&#123;% btn url, text, icon [<span class="keyword">class</span>], [title] %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//url     : URL的绝对或相对路径</span></span><br><span class="line"><span class="comment">//text    : Button text. Required if no icon specified.</span></span><br><span class="line"><span class="comment">//icon    : FontAwesome 图标名称 (最开头没有fa-). 如果没有文字添加则必须选择。</span></span><br><span class="line"><span class="comment">//[class] : FontAwesome class(es): fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5x 可选变量。</span></span><br><span class="line"><span class="comment">//[title] : 鼠标悬浮的提示。可选变量。</span></span><br></pre></td></tr></table></figure><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><div class="tabs" id="标签"><ul class="nav-tabs"><li class="tab active"><a href="#标签-1">文字+URL+图标</a></li><li class="tab"><a href="#标签-2">文字+URL</a></li><li class="tab"><a href="#标签-3">文字</a></li></ul><div class="tab-content"><div class="tab-pane active" id="标签-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn https://vector.today, Vector主页, home %&#125;</span><br></pre></td></tr></table></figure><p><a class="btn" href="https://vector.today"><i class="fa fa-home"></i>Vector主页</a></p></div><div class="tab-pane" id="标签-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn https://vector.today, Vector主页, %&#125;</span><br></pre></td></tr></table></figure><p><a class="btn" href="https://vector.today">Vector主页</a></p></div><div class="tab-pane" id="标签-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn , Vector主页, %&#125;</span><br></pre></td></tr></table></figure><p><a class="btn" href="">Vector主页</a></p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《二、主题美化》</title>
      <link href="/posts/4db997df/"/>
      <url>/posts/4db997df/</url>
      
        <content type="html"><![CDATA[<p>本教程基于<code>Hexo v4.2</code>和<code>Next v7.7</code>作为教学案例进行演示。<br>从第一篇建站后的主题美化，并进行自定义修改，可以让大家按照自己的想法进行美化改造。</p><span id="more"></span><h1 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h1><p>例如 <a href="https://github.com/theme-next/hexo-theme-next">Next主题</a>，进入官网Github后，可以看到介绍下载内容。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入hexo建站文件夹</span></span><br><span class="line">cd hexo</span><br><span class="line"><span class="comment"># 下载next主题到themes文件夹</span></span><br><span class="line">git clone https://github.com/theme-<span class="built_in">next</span>/hexo-theme-<span class="built_in">next</span> themes/<span class="built_in">next</span></span><br></pre></td></tr></table></figure><h1 id="全局修改主题"><a href="#全局修改主题" class="headerlink" title="全局修改主题"></a>全局修改主题</h1><p>打开<code>/HexoBlog/_config.yml</code>，修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：HexoBlog建站文档里会有两个_config.yml配置文件，各存在于：</p><ul><li>HexoBlog&#x2F;_config.yml</li><li>HexoBlog&#x2F;themes&#x2F;next&#x2F;_config.yml</li></ul><p>其中，上面的配置文件是针对于全局Hexo的配置文档，例如博客名称、主题、链接、以及git保存链接。<br>下面这一个是针对next这个主题的具体配置信息，请勿混淆。</p></blockquote><h1 id="主题自带样式修改"><a href="#主题自带样式修改" class="headerlink" title="主题自带样式修改"></a>主题自带样式修改</h1><p>像<a href="https://github.com/theme-next/hexo-theme-next"><strong>Next</strong></a>这样的使用量超广的主题，在主题配置文件下都可以有很多自定义的详细修改参数，一般都可以通过<code>true</code>和<code>false</code>来进行修改。</p><h2 id="首页菜单栏"><a href="#首页菜单栏" class="headerlink" title="首页菜单栏"></a>首页菜单栏</h2><p>这部分可以自主定义博客的几大类别：首页、存档、分类、标签、关于。</p><p>比如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span>  <span class="comment">#目录</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span>  <span class="comment">#首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span>  <span class="comment">#存档目录</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span>  <span class="comment">#分类目录</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span>  <span class="comment">#标签目录</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">user</span>  <span class="comment">#关于目录</span></span><br><span class="line">  <span class="comment"># 链接的值 ：链接的目录位置 || 链接的图标</span></span><br></pre></td></tr></table></figure><p>这部分可以增减，依靠个人喜好，也可以进行目录名称的修改。修改文章大目录的位置在<code>HexoBlog\themes\next\languages\zh-CN.yml</code>里。</p><p>链接的值不可修改，一旦修改next主题识别不到位置。需要修改的是在对应的翻译文档里将所定义的分类目录修改为指定的名称。</p><p>例如：</p><figure class="highlight yml"><figcaption><span>themes\next\languages\zh-CN.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">大世界</span> <span class="comment"># home: 首页</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">全部文章</span> <span class="comment"># archives: 归档</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">归类文档</span> <span class="comment"># categories: 分类</span></span><br></pre></td></tr></table></figure><h3 id="菜单栏样式"><a href="#菜单栏样式" class="headerlink" title="菜单栏样式"></a>菜单栏样式</h3><p>此处修改目录样式</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span> <span class="comment"># 是否图标显示</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">true</span> <span class="comment"># 计数或者圆点</span></span><br></pre></td></tr></table></figure><h3 id="侧边栏样式"><a href="#侧边栏样式" class="headerlink" title="侧边栏样式"></a>侧边栏样式</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> <span class="comment"># 侧边栏位置</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 侧边栏宽度</span></span><br><span class="line">  <span class="comment"># Muse | Mist: 320</span></span><br><span class="line">  <span class="comment"># Pisces | Gemini: 240</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">260</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 侧边栏展示方式(只针对于 Muse | Mist)</span></span><br><span class="line">  <span class="comment">#  - post    发布的文章页面自动展开（默认）</span></span><br><span class="line">  <span class="comment">#  - always  所有页面自动展开</span></span><br><span class="line">  <span class="comment">#  - hide    只有点击侧边栏切换图标时才展开</span></span><br><span class="line">  <span class="comment">#  - remove  移除所有侧边栏界面</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">avatar:</span> <span class="comment"># 侧边栏头像</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#你的头像地址（图床）</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span> <span class="comment">#圆型头像</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span> <span class="comment">#旋转</span></span><br><span class="line"></span><br><span class="line"><span class="attr">site_state:</span> <span class="literal">true</span> <span class="comment">#日志、分类、标签计数显示</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social:</span> <span class="comment">#展示社交链接</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/MichaelVector</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:cbw390179428@cloud.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line"></span><br><span class="line"><span class="attr">toc:</span> <span class="comment">#文章标题目录</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span> <span class="comment">#换行</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span> <span class="comment">#自动展开所有</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span> <span class="comment">#最大目录深度</span></span><br></pre></td></tr></table></figure><h2 id="文章设置"><a href="#文章设置" class="headerlink" title="文章设置"></a>文章设置</h2><h3 id="首页文章排序"><a href="#首页文章排序" class="headerlink" title="首页文章排序"></a>首页文章排序</h3><p>Hexo默认是以日期<code>date</code>进行倒序排列，但有时候更新了文章，想让最新的更新排在前列呢？<br>只需修改一个参数即可：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line"><span class="comment">index_generator:</span></span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line"><span class="deletion">- # order_by: -date</span></span><br><span class="line"><span class="addition">+ order_by: -update</span></span><br></pre></td></tr></table></figure><h3 id="阅读更多"><a href="#阅读更多" class="headerlink" title="阅读更多"></a>阅读更多</h3><p>在文章简介后可以加入<code>&lt;!-- more --&gt;</code>来缩短在首页显示的内容（而不是整个篇幅）。<br>同时需要打开<code>read more button</code>的开关。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br><span class="line">read_more_btn: true</span><br></pre></td></tr></table></figure><h3 id="文章信息"><a href="#文章信息" class="headerlink" title="文章信息"></a>文章信息</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span> <span class="comment">#显示文字</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span> <span class="comment">#创建时间</span></span><br><span class="line">  <span class="attr">updated_at:</span> </span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#更新时间</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span> <span class="comment"># 同一天则不显示</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment">#显示分类</span></span><br></pre></td></tr></table></figure><h3 id="文章计数"><a href="#文章计数" class="headerlink" title="文章计数"></a>文章计数</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span> <span class="comment">#另起一行</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span> <span class="comment">#文字计数</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span> <span class="comment">#文字计数</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">3</span> </span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">300</span></span><br></pre></td></tr></table></figure><h3 id="代码块样式"><a href="#代码块样式" class="headerlink" title="代码块样式"></a>代码块样式</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">flat</span> <span class="comment"># Available values: default | flat | mac</span></span><br></pre></td></tr></table></figure><h2 id="页脚"><a href="#页脚" class="headerlink" title="页脚"></a>页脚</h2><h3 id="页脚标签美化"><a href="#页脚标签美化" class="headerlink" title="页脚标签美化"></a>页脚标签美化</h3><p>使用图标来代替#的标签样式</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="打赏设置"><a href="#打赏设置" class="headerlink" title="打赏设置"></a>打赏设置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span> <span class="comment">#动态</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/paypal.png</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/paypal.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment">#自定义标题，留空做默认</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h2><h3 id="返回顶层"><a href="#返回顶层" class="headerlink" title="返回顶层"></a>返回顶层</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span> <span class="comment">#是否显示在侧边栏</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span> <span class="comment">#百分比</span></span><br></pre></td></tr></table></figure><h3 id="阅读进度条"><a href="#阅读进度条" class="headerlink" title="阅读进度条"></a>阅读进度条</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span> <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure><h3 id="Github条幅"><a href="#Github条幅" class="headerlink" title="Github条幅"></a>Github条幅</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/MichaelVector</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="第三方代码样式"><a href="#第三方代码样式" class="headerlink" title="第三方代码样式"></a>第三方代码样式</h1><h2 id="增加建站时间"><a href="#增加建站时间" class="headerlink" title="增加建站时间"></a>增加建站时间</h2><p>修改<code>footer.njk</code>，在最后加上：</p><figure class="highlight js"><figcaption><span>/themes/matery/layout/_partial/footer.njk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">siteTime</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2018</span>, <span class="number">09</span>, <span class="number">11</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>); <span class="comment">//北京时间</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diff = t2 - t1;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff / years);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff / days) - diffYears * <span class="number">365</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days) / hours);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days - diffHours * hours) / minutes);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff - (diffYears * <span class="number">365</span> + diffDays) * days - diffHours * hours - diffMinutes * minutes) / seconds);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sitetime&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;本站已运行 &quot;</span> +diffYears+<span class="string">&quot; 年 &quot;</span>+diffDays + <span class="string">&quot; 天 &quot;</span> + diffHours + <span class="string">&quot; 小时 &quot;</span> + diffMinutes + <span class="string">&quot; 分钟 &quot;</span> + diffSeconds + <span class="string">&quot; 秒&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">siteTime</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h2><h3 id="下载脚本文件"><a href="#下载脚本文件" class="headerlink" title="下载脚本文件"></a>下载脚本文件</h3><p>点击下方按钮下载相应的脚本，并置于 <code>themes\next\source\js\cursor\</code> 目录下：</p><a class="btn" href="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/cursor/explosion.min.js"><i class="fa fa-download"></i>爆炸特效</a><a class="btn" href="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/cursor/fireworks.js"><i class="fa fa-download"></i>礼花特效</a><a class="btn" href="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/cursor/love.min.js"><i class="fa fa-download"></i>爱心特效</a><a class="btn" href="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/cursor/text.js"><i class="fa fa-download"></i>文字特效</a><h3 id="添加引用代码、文件"><a href="#添加引用代码、文件" class="headerlink" title="添加引用代码、文件"></a>添加引用代码、文件</h3><p>在主题自定义布局文件中添加以下代码：</p><figure class="highlight js"><figcaption><span>layout\_third-party\cursor.njk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">cursor_effect</span> == <span class="string">&quot;fireworks&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;explosion&quot;</span> %&#125;</span><br><span class="line">  &lt;canvas <span class="keyword">class</span>=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;/js/cursor/explosion.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;love&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/love.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;text&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/text.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="添加-layout-njk引用"><a href="#添加-layout-njk引用" class="headerlink" title="添加_layout.njk引用"></a>添加_layout.njk引用</h3><p>如果 <code>cursor.njk</code> 文件不存在，需要手动新建并在布局页面中 body 末尾引入：</p><figure class="highlight diff"><figcaption><span>layout\_layout.njk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;%- include &#x27;_third-party/math/index.njk&#x27; -%&#125;</span><br><span class="line">      &#123;%- include &#x27;_third-party/quicklink.njk&#x27; -%&#125;</span><br><span class="line"><span class="addition">+     &#123;%- include &#x27;_third-party/cursor.njk&#x27; -%&#125;</span></span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="增加选择变量"><a href="#增加选择变量" class="headerlink" title="增加选择变量"></a>增加选择变量</h3><p>在主题配置文件中添加以下代码：</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mouse click effect: fireworks | explosion | love | text</span></span><br><span class="line"><span class="attr">cursor_effect:</span> <span class="string">fireworks</span></span><br></pre></td></tr></table></figure><p>这样即可在配置文件中一键快速切换鼠标点击特效。</p><h2 id="Canvas-nest-背景特效"><a href="#Canvas-nest-背景特效" class="headerlink" title="Canvas-nest 背景特效"></a>Canvas-nest 背景特效</h2><p>新版本的Next已经移除了对<code>canvas-nest</code>的支持，但此特效依旧是我的最爱。<br>现用最简便的方式引用添加js文件来添加支持。</p><h3 id="新增一个njk文件"><a href="#新增一个njk文件" class="headerlink" title="新增一个njk文件"></a>新增一个njk文件</h3><p>njk文件的原身就是swig。<br>在<code>Hexo\themes\next\layout\_third-party</code>里新建<code>nest.njk</code></p><p>添加内容：</p><figure class="highlight js"><figcaption><span>themes\next\layout\_third-party\nest.njk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script </span><br><span class="line">    color=<span class="string">&quot;0,0,0&quot;</span></span><br><span class="line">    opacity=<span class="string">&quot;0.7&quot;</span></span><br><span class="line">    zIndex=<span class="string">&quot;-1&quot;</span></span><br><span class="line">    count=<span class="string">&quot;120&quot;</span> </span><br><span class="line">    src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/canvas-nest.js@1/dist/canvas-nest.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="添加全局引用"><a href="#添加全局引用" class="headerlink" title="添加全局引用"></a>添加全局引用</h3><p>在文件<code>layout.njk</code>中，最下方添加刚才新建的<code>nest.njk</code>文件。</p><figure class="highlight diff"><figcaption><span>layout\_layout.njk</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">      ...</span><br><span class="line">      &#123;%- include &#x27;_third-party/math/index.njk&#x27; -%&#125;</span><br><span class="line">      &#123;%- include &#x27;_third-party/quicklink.njk&#x27; -%&#125;</span><br><span class="line">      &#123;%- include &#x27;_third-party/cursor.njk&#x27; -%&#125;</span><br><span class="line"><span class="addition">+     &#123;%- include &#x27;_third-party/nest.njk&#x27; -%&#125;</span></span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure><p>最后在Next主题的配置文件中打开此脚本的开关：</p><figure class="highlight yml"><figcaption><span>theme/next/_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程《一、安装同步》</title>
      <link href="/posts/6255f60b/"/>
      <url>/posts/6255f60b/</url>
      
        <content type="html"><![CDATA[<p>本人使用博客及建站有段时间了，也在不断努力学习。一直使用大名鼎鼎的Next，还用过大神<a href="https://xaoxuu.com/">xaoxuu</a>的<a href="https://github.com/xaoxuu/hexo-theme-volantis">volantis</a>，获取到的知识越来越多，现把学到的知识进行下总结和分享，自我总结的同时也可以让更多人了解并熟悉这个过程，可以让更多的盆友拥有自己的博客空间~有不足的地方请大家多多指正。互相学习，不断进步！</p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  本教程使用Coding Page作为教学案例，之前使用github Page，但众所周知的原因，在国内服务器的速度很是不理想，也试过用Cloudflare进行CDN加速，但效果终是不及国内云速度快。说白了还是qiong。</p><blockquote><p>另外，不推荐码云的理由是，如果普通用户不付费的情况下，有两点非常不满意：1、同步至git后需要手动进行部署。2、个性域名不支持绑定。要实现这两点必须购买一年99的pro套餐。而且一点进去就是各种广告，让升级企业，实在是恶心，对于这个只是个人观点，不喜勿喷。</p></blockquote><h1 id="建仓（云端）"><a href="#建仓（云端）" class="headerlink" title="建仓（云端）"></a>建仓（云端）</h1><h2 id="建立账号及网页仓库"><a href="#建立账号及网页仓库" class="headerlink" title="建立账号及网页仓库"></a>建立账号及网页仓库</h2><p>新建一个仓库，选择DevOps项目。</p><fancybox><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%281%29.jpg'></fancybox><p>填入想命名的名字，例如Textpages。</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%2810%29.jpg'><h2 id="生成Page网页"><a href="#生成Page网页" class="headerlink" title="生成Page网页"></a>生成Page网页</h2><p>点击构建与部署、点击静态网站。</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%284%29.jpg'><p>网站名称随意写，选择项目和仓库都是想呈现网站的项目，例如Textpages。</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%282%29.jpg'><p>点击立即部署，此时能看到访问地址<code>xxx.coding-pages.com</code>。</p><p>至此，云端的部署已经执行完毕，现在来创建本地Hexo建站文档。</p><h1 id="安装Hexo本地文档（本地）"><a href="#安装Hexo本地文档（本地）" class="headerlink" title="安装Hexo本地文档（本地）"></a>安装Hexo本地文档（本地）</h1><h2 id="安装所需依赖及文件"><a href="#安装所需依赖及文件" class="headerlink" title="安装所需依赖及文件"></a>安装所需依赖及文件</h2><ul><li>安装Node.js</li><li>安装git</li></ul><p>以上两个属于安装Hexo所必须的依赖。</p><h2 id="初始化Hexo建站文档"><a href="#初始化Hexo建站文档" class="headerlink" title="初始化Hexo建站文档"></a>初始化Hexo建站文档</h2><p>进入到你想存放本地Hexo建站文档的地方，右键Git Bash here。（本机使用Fluent Terminal演示）。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init HexoBlog <span class="comment">#初始化本地文档</span></span><br></pre></td></tr></table></figure><p>初始化Hexo本地建站文档，并使用<code>HexoBlog</code>作为本地文档文件夹（命名可以随便写，记住就好）。</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%285%29.jpg'><p>可以先看看本地Hexo建站文档的详情目录</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%286%29.jpg'><ul><li>Scaffolds 是模板</li><li>source是站点里所有文档及编排的存储目录（新写的文章就放在里面）</li><li>themes是主题</li><li>_config.yml是总设置，Hexo的设置。</li></ul><h2 id="安装部署Git的插件"><a href="#安装部署Git的插件" class="headerlink" title="安装部署Git的插件"></a>安装部署Git的插件</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><h2 id="修改上传Git的地址"><a href="#修改上传Git的地址" class="headerlink" title="修改上传Git的地址"></a>修改上传Git的地址</h2><p>修改git上传地址，在_config.yml最下方，按照图片填写。Repo的地址为coding项目里git字样。</p><img src='https://tuchuang-1258561688.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%287%29.jpg'><h1 id="同步密钥"><a href="#同步密钥" class="headerlink" title="同步密钥"></a>同步密钥</h1><p>现在云端和本地的部署都已经完成，但如何将两者同步起来呢。<br>这时候就需要使用我们的密钥（公钥、私钥）来进行授权（GitHub、Coding）以进行同步。</p><h2 id="创建-SSH-Key"><a href="#创建-SSH-Key" class="headerlink" title="创建 SSH Key"></a>创建 <code>SSH Key</code></h2><p>在<code>Git Bash</code>中输入</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><img src='https://tuchuang-1258561688.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/Screenshot%202020-12-04%20203553.png'><p>然后就会显示这两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (C:/Users/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>默认直接回车就行，文件就默认保存到<code>C:/Users/.ssh/id_rsa</code><br>密码部分直接回车两次默认。最后会收到这段代码提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in C:/Users/.ssh/id_rsa</span><br><span class="line">Your public key has been saved in C:/Users/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><blockquote><p><code>id_rsa</code>是私钥<br><code>id_rsa.pub</code>是公钥</p></blockquote><p>此时公钥和密钥就生成完成，现在只需导入到GitHub或者Coding的库里就行。</p><h1 id="生成并部署"><a href="#生成并部署" class="headerlink" title="生成并部署"></a>生成并部署</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo d <span class="comment"># deploy 部署</span></span><br><span class="line">hexo g <span class="comment"># generate 生成</span></span><br><span class="line">hexo clean <span class="comment">#清理缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简化</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%289%29.jpg'><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><p>现在查看代码文档里，已经多了很多生成的网页文件。点击静态网站里的访问地址，是不是就看到了已经建立好的Hexo网站了呢~</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%2810%29.jpg'><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/1%20%2811%29.jpg'>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac睡眠模式详解</title>
      <link href="/posts/6a701a66/"/>
      <url>/posts/6a701a66/</url>
      
        <content type="html"><![CDATA[<p>黑苹果多多少少会遇到睡眠问题，这篇问题简析了下苹果睡眠的原理和使用，这样可以更好的给自己电脑不同的睡眠参数达到应有的效果。</p><fancybox><img width=500 src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E7%9D%A1%E7%9C%A0%E6%A8%A1%E5%BC%8F.png'></fancybox><span id="more"></span><h2 id="Mac所有睡眠参数"><a href="#Mac所有睡眠参数" class="headerlink" title="Mac所有睡眠参数"></a>Mac所有睡眠参数</h2><p>OSX 的睡眠参数，可以打<code>pmset -g</code>了解一下你的电脑处在什么睡眠模式下：</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E5%BD%93%E5%89%8D%E7%9D%A1%E7%9C%A0%E6%A8%A1%E5%BC%8F.png" alt="Mac睡眠"></p><ul><li><code>standby</code>:功能跟autopoweroff一样，不过仅在hibernatemode为3的时候起作用，1是开启 0是关闭。不过LZ一直没搞明白autopoweroff跟standby有什么不一样，按理说应该是不一样的</li><li><code>standbydelay</code>:启用standby功能的时间，单位也是秒</li><li><code>womp</code>:网络远程唤醒，1是开启  0是关闭</li><li><code>hibernatefile</code>:内存镜像存放的地址，这个也可以更改，不过路径必需是root下的路径</li><li><code>halfdim</code>:显示器睡眠时使显示器亮度改变为当前亮度的一半，1是开启  0是关闭。如果关闭这个功能的话，显示器睡眠会直接关掉显示器。</li><li><code>networksleep</code>:这个设置影响Mac在睡眠的过程中如何提供网络共享服务，LZ也不太清楚是什么，最好就不要动。</li><li><code>disksleep</code>:Mac闲置多长时间后关闭硬盘。这个系统偏好里也有，只不过换了一个字眼—如果可能，使硬盘进入睡眠—勾上这个的话系统就会自动根据sleep的时间设一个合适的时间。单位是秒，这个时间不能长于sleep下设置的时间</li><li><code>sleep</code>:Mac闲置多长时间后进入睡眠，这个系统偏好设置里也有，单位是分钟</li><li><code>autopoweroffdelay</code>:启用autopoweroff功能的时间，也就是上面说的那个“指定的时间”，单位是秒</li><li><code>hibernatemode</code>:睡眠模式- <code>autopoweroff</code>: 如果Mac处于睡眠状态经过指定的时间后，自动把内存数据写入硬盘，并切断所有部件的电源，进入休眠状态，1是开启  0是关闭。但是LZ发现就算是处于开启状态，这个功能也并没有起作用，你可以不管它，也可以关掉</li><li><code>ttyskeepawake</code>:远程用户正在活动时防止Mac进入睡眠，1是开启  0是关闭</li><li><code>displaysleep</code>:Mac闲置多长时间后进入显示器睡眠，2013款Air的系统偏好设置里已经没有这个选项了，Pro是有的，不过其实你可以通过pmset来修改。单位是分钟，这个时间不能长于sleep下设置的时间</li><li><code>lidwake</code>: 当屏幕掀开的时候唤醒Mac，1是开启  0是关闭</li><li><code>darkwakes</code>:这个就是Power Nap，你可以在系统偏好设置里选择开或关，跟在这里设置是一样的，1是开启  0是关闭</li><li><code>lessbright</code>:使用电池时使显示器亮度暗一点，系统偏好设置里也有这个，1是开启  0是关闭</li><li><code>sleepservice</code>:LZ还没搞清楚这个是干嘛的，请知道的锋友解释下。</li></ul><h2 id="查看当前睡眠模式"><a href="#查看当前睡眠模式" class="headerlink" title="查看当前睡眠模式"></a>查看当前睡眠模式</h2><p>在终端里输入<code>pmset -g | grep hibernatemode</code>查看当前睡眠模式</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E5%BD%93%E5%89%8D%E7%9D%A1%E7%9C%A0%E6%A8%A1%E5%BC%8F.png" alt="当前睡眠模式"><br>关于各种睡眠模式参数：</p><ul><li><p><strong>0-老式睡眠模式</strong></p><blockquote><p>优点：睡眠期间内存加电，禁用safe sleep（安全睡眠），超快速唤醒，无论是唤醒还是进入睡眠都是1秒内的事情；节省SSD空间和寿命，因为内存数据不写入硬盘，所以硬盘里不会有内存镜像，也不会缩短SSD寿命。<br>缺点：耗电，因为一直在内存加载电量，随时待命阶段，但是如果在睡眠的过程中电池没电的话，Mac会丢失所有内存种的数据，数据安全性不是很高。</p></blockquote></li><li><p><strong>1-休眠模式</strong></p><blockquote><p>内存中的数据将写入到磁盘上，系统在所谓的“睡眠”时将完全关闭<br>因为需要读取先前保存在硬盘中的内存数据，所以唤醒较慢，相当于是Win10的休眠。<br>优点：休眠时完全关闭电量供应，极度省电。<br>缺点：休眠和唤醒时间较长。</p></blockquote></li><li><p><strong>3-睡眠模式</strong>（2005年秋季之后机器默认采用的）</p><blockquote><ul><li>睡眠过程中，内存保持通电状态，同时内存数据在进入睡眠模式之前同样要写入到硬盘<br>万一没有外接电源并且电池也完全没电了的话，系统将自动进入休眠模式。</li><li>0和1的结合，睡眠时内存数据写入硬盘，同时保持内存供电。这个模式也叫Safe Sleep，是Mac的默认睡眠模式。</li></ul></blockquote></li><li><p><strong>5-和模式1一样</strong></p><blockquote><p>但这是为了那些使用安全虚拟内存的用户  System Preferences -&gt; Security（系统设置-安全）</p></blockquote></li></ul><h2 id="修改当前参数"><a href="#修改当前参数" class="headerlink" title="修改当前参数"></a>修改当前参数</h2><p>在终端输入<code>sudo pmset -电源 参数 数值</code></p><p>其中电源有4个参数，分别是：<code>c</code>、<code>b</code>、<code>u</code>、<code>a</code>，作用是表明这个命令修改的是哪个电源设置下的参数。</p><blockquote><p><code>c</code>代表外接电源、<code>b</code>代表电池、<code>u</code>代表UPS、<code>a</code>代表所有电源。</p></blockquote><p>参数就是具体的某一项参数，例如你想修改睡眠模式，那就是<code>hibernatemode</code>；修改睡眠闲置时间，是<code>sleep</code>。</p><p>例如你想修改<strong>外接电源</strong>是Mac的<strong>显示器睡眠闲置时间</strong>为10分钟，那就输入：</p><p><code>sudo pmset -c displaysleep 10</code></p><p>想修更改<strong>所有电源</strong>下的<strong>硬盘睡眠闲置时间</strong>为15分钟，那就是：</p><p><code>sudo pmset -a disksleep 15</code></p><blockquote><p>时间设置上，应该是sleep&gt;&#x3D;disksleep&gt;&#x3D;displaysleep，例如分别设置为15 15 10，否则就可能出问题</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果MSI-Z370-i5-8G-RX590</title>
      <link href="/posts/6aad00b7/"/>
      <url>/posts/6aad00b7/</url>
      
        <content type="html"><![CDATA[<p>卖掉了用了两年的XPS15-9560，因为性能实在跟不上，索性卖掉XPS攒了台台式机，正式用性能比较好的黑苹果了。</p><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E9%BB%91%E8%8B%B9%E6%9E%9C10.14.5.jpg'><span id="more"></span><h2 id="配置如下："><a href="#配置如下：" class="headerlink" title="配置如下："></a>配置如下：</h2><ul><li><strong>主板：微星Z370M MORTAR</strong></li><li><strong>CPU：i5-8600K</strong></li><li><strong>内存：芝奇幻光戟 8G-DDR4 3000</strong></li><li><strong>硬盘：三星(SAMSUNG) 970 EVO PLUS 500G NVMe 固态硬盘</strong></li><li><strong>显卡：盈通RX590-8G-女装大佬</strong></li><li><strong>网卡：博通BCM94360CD</strong></li><li><strong>机箱：酷冷至尊Q300P</strong></li><li><strong>显示器：DELL U2417H</strong></li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>目前除了蓝牙和WI-FI没有装（台式机没装WI-FI蓝牙卡），icloud三码完美，FACETIME，iCloud，显卡，变频，声卡都完美。</p><h2 id="如何在有独立显卡的设备下（nVidia）使用macOS14"><a href="#如何在有独立显卡的设备下（nVidia）使用macOS14" class="headerlink" title="如何在有独立显卡的设备下（nVidia）使用macOS14"></a>如何在有独立显卡的设备下（nVidia）使用macOS14</h2><blockquote><p>例如本机使用的是GTX1060的显卡，目前在macOS官网上没有办法驱动。</p></blockquote><p>但换一个思路：在有集成显卡的情况下。启动Clover后如果要进入macOS，则使用本机自带的集成显卡（UHD630）可以使用macOS10.14。如果启动CLover后进入Win10，则使用主机上的独立显卡的接口：DP，进入Win10后可使用独立显卡（DP接口）。</p><p>如此一来，即便进入macOS10.14使用的是集成显卡，但可以完美正常使用，因为一般也不会在mac下玩游戏，集成显卡足以。这样的操作可能会经常切换显示器接口。但总的来说可以解决升级10.14不能用显卡的问题。</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E5%8F%8C%E6%98%BE%E5%8D%A1%E5%88%87%E6%8D%A2.jpg" alt="双显卡切换"></p><h2 id="关于网卡、蓝牙"><a href="#关于网卡、蓝牙" class="headerlink" title="关于网卡、蓝牙"></a>关于网卡、蓝牙</h2><p>台式机选择的博通的94360CD，说是原生苹果拆机硬件，可以直接免驱。使用之后直接可以蓝牙和Handoff，隔空投送一样完美。</p><h2 id="更换1060为RX590"><a href="#更换1060为RX590" class="headerlink" title="更换1060为RX590"></a>更换1060为RX590</h2><p>开启原生A卡硬件加速-RX590</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F.jpg" alt="硬件加速"></p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F2.jpg" alt="硬件加速"></p><p>可以在图一里面看到硬解4K视频的时候，核显和独显都参与了解码过程，但CPU的使用率很低。此时显卡解码完美。</p><h2 id="全新配置macOS-10-15-Catalina"><a href="#全新配置macOS-10-15-Catalina" class="headerlink" title="全新配置macOS 10.15 Catalina"></a>全新配置macOS 10.15 Catalina</h2><p>这次更新主要从方法方式上进行更新，相应的驱动也更加完美。CPU原生支持，声卡、NVMe、USB、HDMI音频和显卡都是从主板PCI接口自动识别而来，因此设备设置里的IntelGFX和显卡设置里都<strong>无需</strong>添加相应的仿冒参数（3E9B007），从而UHD630和RX590都是原生PCI生成参数。</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/PCI.png" alt="PCI"></p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/UHD630.png" alt="UHD630"></p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/RX590.png" alt="RX590"></p><p>从图片里可以看到显示器&#x2F;显卡部分，所有信息都是从PCI设备里自动识别出来的，包括GPU1和GPU2都是自动识别的。</p><p><strong>而且：重点是双显卡都可以正常使用！</strong></p><p>我有两个显示器，分辨率为主1080P，副900P（1440*900）。</p><p><em><strong>此时独立显卡只连接的是RX590独立显卡，副显示器连接的是主板上的核显UHD630，比如副显示器看直播和视频主显示做自己工作完全不影响而且完美运行，4K硬件加速也都正常。</strong></em></p><p><em><strong>因此此方式的驱动参数设置应该是对于黑苹果来说最完美的配置。</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目“XXX”已被macOS使用，不能打开的解决方案</title>
      <link href="/posts/f6d261f8/"/>
      <url>/posts/f6d261f8/</url>
      
        <content type="html"><![CDATA[<p>发生的问题：项目”xxx”已被macOS使用，不能打开</p><blockquote><p>问题简述：有时候拷贝文件（JPG、mp4）之类的文件到NTFS或者其他硬盘格式的驱动器上时，会出现在Win10和macOS都无法打开的情况。原因是文件属性和权限出现问题，解决方案是清楚默认属性，就可以重新进行文件访问。</p></blockquote><span id="more"></span><h2 id="进入目标分区目录"><a href="#进入目标分区目录" class="headerlink" title="进入目标分区目录"></a>进入目标分区目录</h2><p><code>cd 你的文件目录</code></p><h2 id="查看文件属性"><a href="#查看文件属性" class="headerlink" title="查看文件属性"></a>查看文件属性</h2><p><code>ls -l</code></p><blockquote><p>这些被占用的文件属性后面都加上了@。这是 Mac OS X 文件系统的附加属性（extended attributes）</p></blockquote><h2 id="查看文件属性-1"><a href="#查看文件属性-1" class="headerlink" title="查看文件属性"></a>查看文件属性</h2><p>输入：<code>xattr -l 文件名称</code> 可以看到该文件的详细属性。<br>输入：<code>xattr --help</code> 查看xattr命令的使用方法。</p><p>可以看到<code>xattr -c</code> 可以删除掉文件的所有附加属性。</p><h2 id="修改文件属性"><a href="#修改文件属性" class="headerlink" title="修改文件属性"></a>修改文件属性</h2><p>输入： <code>xattr -c *.rmvb</code>  （*.后面加上特定文件属性）。<br>输入： <code>xattr -c *.*</code>  可对目录下所有文件进行附加属性清除。</p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果开启原生NTFS读写</title>
      <link href="/posts/28643f29/"/>
      <url>/posts/28643f29/</url>
      
        <content type="html"><![CDATA[<p>其实苹果系统是支持原生NTFS读写的，因为版权的问题不能开放给普通用户授权使用。但默认是支持的，我们可以通过“旁门左道”来实现。</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/fstab.png"></p><span id="more"></span><h2 id="一、查看所有分区的卷标"><a href="#一、查看所有分区的卷标" class="headerlink" title="一、查看所有分区的卷标"></a>一、查看所有分区的卷标</h2><p>打开终端，输入<code>diskutil list</code>查看所有硬盘的分区列表</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/%E7%A3%81%E7%9B%98%E5%88%97%E8%A1%A8.png"></p><h2 id="二、编辑fstab文件"><a href="#二、编辑fstab文件" class="headerlink" title="二、编辑fstab文件"></a>二、编辑fstab文件</h2><p>文件位于<code>/etc/fstab</code></p><p>输入<code>sudo nano /etc/fstab</code>在输入密码回车进行配置</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/fstab.png"></p><p>根据自己要配置的NTFS分区卷标输入配置信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LABEL=D none ntfs rw,auto,nobrowse</span><br><span class="line">LABEL=E none ntfs rw,auto,nobrowse</span><br><span class="line">LABEL=F none ntfs rw,auto,nobrowse</span><br></pre></td></tr></table></figure><p>输入盘符以后按<code>Ctrl+X</code>进行保存，在输入<code>Y</code>进行确认，之后回车确认写入文件<code>/etc/fstab</code>保存文件</p><blockquote><p>因为加入了nobrowse所以Finder中看不到修改过的NTFS分区（不加入nobrowse不会生效）所以要使用快捷方式进行访问。<br>用磁盘工具将配置好的NTFS分区卸载再装在使配置生效（无需重启）</p></blockquote><h2 id="三、生成快捷方式"><a href="#三、生成快捷方式" class="headerlink" title="三、生成快捷方式"></a>三、生成快捷方式</h2><p>在终端中输入<br><code>sudo ln -s /Volumes/D ~/Desktop/D</code><br>即可在桌面生成NTFS分区D的快捷方式</p>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习模版</title>
      <link href="/posts/cdf39821/"/>
      <url>/posts/cdf39821/</url>
      
        <content type="html"><![CDATA[<p>此文列举了<code>Markdown</code>的一些基本概念和语法。</p><span id="more"></span><h1 id="语言介绍"><a href="#语言介绍" class="headerlink" title="语言介绍"></a>语言介绍</h1><ul><li><strong>Markdown</strong>是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</li><li><strong>Markdown</strong>语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</li><li><strong>Markdown</strong>编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</li><li><strong>Markdown</strong>编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</li></ul><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><table><thead><tr><th align="center">代码</th><th align="center">效果</th></tr></thead><tbody><tr><td align="center"><code>*斜体*或者_斜体_</code></td><td align="center"><em>斜体</em>或者_斜体_</td></tr><tr><td align="center"><code>**粗体**</code></td><td align="center"><strong>粗体</strong></td></tr><tr><td align="center"><code>***加粗斜体***</code></td><td align="center"><em><strong>加粗斜体</strong></em></td></tr><tr><td align="center"><code>~~删除线~~</code></td><td align="center"><del>删除线</del></td></tr><tr><td align="center"><code>代码框</code></td><td align="center"><code>代码框</code></td></tr></tbody></table><h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。</p><div class="note info"><p>[  ]里写链接文字，(  )里写链接地址, (  )中的” “中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<br>[链接文字](链接地址 “链接标题”)’这样的形式。链接地址与链接标题前有一个空格。</p></div><p>代码</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到[<span class="string">我的博客</span>](<span class="link">https://vector.today</span>)</span><br></pre></td></tr></table></figure><p>效果<br>欢迎来到<a href="https://vector.today/">我的博客</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><blockquote><p>使用 *，+，- 表示无序列表。</p></blockquote><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 1无序列表项 一</span><br><span class="line">- 2无序列表项 二</span><br><span class="line">- 3无序列表项 三</span><br></pre></td></tr></table></figure><p>效果</p><ul><li>1无序列表项 一</li><li>2无序列表项 二</li><li>3无序列表项 三</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>有序列表则使用数字接着一个<strong>英文</strong>句点。</p><div class="note warning"><p><strong>注意：小数点和列表之有空格。</strong></p></div><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 无序列表项 一</span><br><span class="line">2. 无序列表项 二</span><br><span class="line">3. 无序列表项 三</span><br></pre></td></tr></table></figure><p>效果</p><ol><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ol><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>使用&gt;来对需要注释的文本进行引用</p><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是一个引用文本</span><br></pre></td></tr></table></figure><p>效果</p><blockquote><p>这是一个引用文本</p></blockquote><p>也可以多级引用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是一个引用文本</span><br><span class="line">&gt;&gt;二级引用</span><br><span class="line">&gt;&gt;&gt;三级同理</span><br></pre></td></tr></table></figure><p>效果</p><blockquote><p>这是一个引用文本</p><blockquote><p>二级引用</p><blockquote><p>三级同理</p></blockquote></blockquote></blockquote><h2 id="华丽的分割线"><a href="#华丽的分割线" class="headerlink" title="华丽的分割线"></a>华丽的分割线</h2><p>分割线可以由* - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以</p><p>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">******</span><br><span class="line">- - -</span><br><span class="line">_ _ _</span><br><span class="line">* * *</span><br><span class="line">_ _ _ _ _ _ _</span><br></pre></td></tr></table></figure><p>效果</p><hr><hr><hr><hr><hr><hr><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>用法跟链接的基本一样，唯一的不同就是，图片前面要写一个！（这是必须的），没什么好说的。</p><p>代码</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/HEXO.jpg</span>)</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/HEXO.jpg" alt="图片名称"></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Powered by `Hexo` !</span><br></pre></td></tr></table></figure><p>Powered by <code>Hexo</code> !</p><p>多行代码样式，上下使用三个&#96;&#96;&#96;来包裹代码行。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><div class="note info"><p><code>-:</code> 设置内容和标题栏居右对齐。<br><code>:-</code> 设置内容和标题栏居左对齐。<br><code>:-:</code> 设置内容和标题栏居中对齐。</p></div><table><thead><tr><th align="left">表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XPS15-9560黑苹果教程-macOS-10.14</title>
      <link href="/posts/2c0cbc17/"/>
      <url>/posts/2c0cbc17/</url>
      
        <content type="html"><![CDATA[<p>流程借鉴之前各位大神的记录现在写一篇自己的教程，希望给有需要的朋友使用，方便大家一起黑苹果！</p><fancybox><img src='https://cos.ap-chengdu.myqcloud.com/tuchuang-1258561688/%E9%BB%91%E8%8B%B9%E6%9E%9C/macOS-9560.jpg'></fancybox><span id="more"></span><h2 id="本设备详情"><a href="#本设备详情" class="headerlink" title="本设备详情"></a>本设备详情</h2><p><strong>XPS15-9560</strong></p><ul><li>CPU：i7-7700HQ</li><li>内存：原生8G DDR4</li><li>硬盘：三星PM961 NVMe SAMSUNG 256GB + 1TB 机械</li><li>显卡：Intel HD Graphics 630 + nVidia 1050 4GB</li><li>网卡：Broadcom DW1830 <code>原生Intel网卡在XPS无法驱动，只能更换</code></li><li>屏幕：1080P</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>8G以上U盘一个（最好空U盘）</li><li>原生DMG文件或者带有Clover引导的DMG文件<br>-<a href="https://imac.hk/">黑苹果乐园</a><br>-<a href="https://blog.daliansky.net/">黑果小兵的部落阁</a></li><li>Win：**<code>transMAC</code>**</li><li>Mac：**<code>Etcher</code>**</li></ul><h2 id="黑苹果安装原理"><a href="#黑苹果安装原理" class="headerlink" title="黑苹果安装原理"></a>黑苹果安装原理</h2><ol><li>用Win下的DMG或者苹果下的.app文件创作一个安装镜像（带EFI分区）</li><li>在启动界面用U盘中的EFI引导进去Clover</li><li>安装黑苹果安装文件，重启</li><li>进入黑苹果安装原生苹果</li></ol><blockquote><ul><li>步骤很简单， 但很多人觉得黑苹果装好难，其实最根本就是问题出在驱动问题了，只要有合适的驱动KEXT和配置文件，黑苹果安装10分钟就能完成，和装Windows系统是一样的。</li><li>就是在U盘创建两个分区，一个EFI启动功能分区，一个安装镜像原文件。</li><li>用EFI启动后，只要<code>KEXT</code>和<code>Config.plist</code>文件没有大问题就可以进黑苹果原版安装。</li></ul></blockquote><h2 id="第一步：创作USB引导安装盘"><a href="#第一步：创作USB引导安装盘" class="headerlink" title="第一步：创作USB引导安装盘"></a>第一步：创作USB引导安装盘</h2><ol><li>下载好原生系统或者懒人包（带Clover）的镜像文件</li><li>用相应的工具写入U盘</li></ol><h2 id="第二步：安装驱动和修改EFI"><a href="#第二步：安装驱动和修改EFI" class="headerlink" title="第二步：安装驱动和修改EFI"></a>第二步：安装驱动和修改EFI</h2><ul><li>将此Github里的<code>KEXT/Other</code>里的文件替换放入你的<code>/EFI/Clover/KEXT/Other</code>里面</li><li>将其他文件也一并替换</li></ul><blockquote><ul><li><strong>替换好开机前请将<code>Bcrm</code>的两个驱动挪在外面，第一次安装会造成失败，困扰我很久，安装完以后在重新放回KEXT里面去。</strong></li><li>建议所有驱动都放在<code>Clover</code>中不要放在系统<code>E/L/S</code>下面，因为一旦因为放入的驱动有问题你没法进系统会造成无法开机。因为放在EFI中出现问题只需要进入EFI修改文件即可，方便以后升级系统或者更新驱动。并不会对系统本身造成影响。</li></ul></blockquote><h2 id="第三步：重启继续安装黑苹果"><a href="#第三步：重启继续安装黑苹果" class="headerlink" title="第三步：重启继续安装黑苹果"></a>第三步：重启继续安装黑苹果</h2><ul><li>不要登陆自己的AppleID，因为是黑苹果，序列号和SM号都没有登记，登陆会造成AppleID被拉入黑名单。</li><li>修改<code>Config.plist</code>的后三项，可以找寻白苹果的三码记录或者自己生成，等FACETIME和iMassage可以用了以后可以享受黑苹果了。</li></ul><h3 id="完善黑苹果"><a href="#完善黑苹果" class="headerlink" title="完善黑苹果"></a>完善黑苹果</h3><ul><li>可以完美自己的屏幕变成HiDPI，在<a href="https://github.com/xzhih/one-key-hidpi">one-key-hidpi</a>可以自动生成目前屏幕可用的所有HiDPI分辨率。再用RDM软件调整自己的分辨率即可。</li></ul><h3 id="关于此Clover"><a href="#关于此Clover" class="headerlink" title="关于此Clover"></a>关于此Clover</h3><p>加入了几个KEXT进行自定义需求，大家可以按照自己的意愿增减。</p><ul><li><code>DisableTurboBoost.kext</code> <strong>禁用睿频驱动</strong></li></ul><p>因为黑苹果下不需要进行大型数据运算游戏之类，有部分兼容性或者是软件会造成100%的CPU负荷，尤其会自动开启睿频加速，造成无意义的CPU高转和高温。禁用后最高CPU到2.8GHz。不需要可以去掉。</p><ul><li><code>NoTouchID.kext</code> <strong>禁用指纹ID</strong></li></ul><p>对于没有指纹解锁的机型加入这个驱动可以在输密码的时候不出现3秒卡顿。</p><ul><li>已删除plist文件三码苹果信息，大家需要可以自行生成或者找白果三码对应。</li><li><code>VoodooHDA.kext</code> <strong>增加外接显示器HDMI音频输出</strong></li></ul><p>用原生AppleHDA可以完美驱动，但是外接显示器的HDMI不能正确识别，用这个可以自主选择外接HDMI输出，没有外接显示器的朋友可以删掉此KEXT。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><ul><li>感谢大神 <a href="https://github.com/jardenliu">@jardenliu</a> 提供的10.14文件和黑苹果思路！</li><li>感谢大神 <a href="https://github.com/gunslinger23">@gunslinger23</a> 提供的10.13文件和黑苹果思路！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
